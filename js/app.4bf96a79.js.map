{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/PuyoSimulatorPlayer.vue?5613","webpack:///./src/PuyoSimulatorEditor.vue?31d8","webpack:///./src/PuyoSimulator.vue?b365","webpack:///./src/PuyoSimulatorEditor.vue?c738","webpack:///./src/PuyoSimulatorPlayer.vue?7908","webpack:///./src/PuyoSimulatorField.vue?b2b7","webpack:///./src/simulator/Field/FieldObject.js","webpack:///./src/simulator/Field/Diff.js","webpack:///./src/simulator/Field/Algorithm.js","webpack:///./src/simulator/Tools/BitStreamWriter.js","webpack:///./src/simulator/Tools/PrefixTree.js","webpack:///./src/simulator/Field/Serializer.js","webpack:///./src/simulator/Field/Deserializer.js","webpack:///./src/simulator/Field/Field.js","webpack:///./src/simulator/Tools/BitStreamReader.js","webpack:///./src/simulator/Game/Game.js","webpack:///./src/simulator/Constant.js","webpack:///src/PuyoSimulatorField.vue","webpack:///./src/PuyoSimulatorField.vue?9b6e","webpack:///./src/PuyoSimulatorField.vue","webpack:///src/PuyoSimulatorPlayer.vue","webpack:///./src/PuyoSimulatorPlayer.vue?a0d1","webpack:///./src/PuyoSimulatorPlayer.vue","webpack:///src/PuyoSimulatorEditor.vue","webpack:///./src/PuyoSimulatorEditor.vue?cb51","webpack:///./src/PuyoSimulatorEditor.vue","webpack:///./src/simulator/Game/Rule.js","webpack:///./src/simulator/Tools/Clamp.js","webpack:///./src/simulator/Game/Tsu.js","webpack:///src/PuyoSimulator.vue","webpack:///./src/PuyoSimulator.vue?b089","webpack:///./src/PuyoSimulator.vue?89be","webpack:///./src/main.js","webpack:///./src/PuyoSimulator.vue?7185"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PuyoSimulatorPlayer_vue_vue_type_style_index_0_id_7758b275_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PuyoSimulatorPlayer_vue_vue_type_style_index_0_id_7758b275_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PuyoSimulatorEditor_vue_vue_type_style_index_0_id_aba63f82_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PuyoSimulatorEditor_vue_vue_type_style_index_0_id_aba63f82_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","PuyoSimulatorvue_type_template_id_5bc6b486_render","_vm","this","_h","$createElement","_c","_self","attrs","id","base64","_v","_s","field","decoded","noMarginTime","final","points","multiplier","staticRenderFns","PuyoSimulatorEditorvue_type_template_id_aba63f82_scoped_true_render","staticClass","_m","PuyoSimulatorEditorvue_type_template_id_aba63f82_scoped_true_staticRenderFns","PuyoSimulatorPlayervue_type_template_id_7758b275_scoped_true_render","state","on","update:state","$event","playing","_e","click","stopPropagation","play","stop","step","reset","PuyoSimulatorPlayervue_type_template_id_7758b275_scoped_true_staticRenderFns","PuyoSimulatorFieldvue_type_template_id_46727571_render","PuyoSimulatorFieldvue_type_template_id_46727571_staticRenderFns","FieldObject","define_property_default","_this","_ref","arguments","undefined","_ref$cleared","cleared","positional","_ref$adjacentCleared","adjacentCleared","_ref$gravityImmune","gravityImmune","_ref$symbol","symbol","classCallCheck","freeze_default","Properties","Diff","type","argument","Type","TRANSFORM","newObject","EXCHANGE","otherPositional","valid","_ref2","_class","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","concat","forEach","diff","Algorithm","targetObjects","_ref$minConnection","minConnection","_ref$onlyVisible","onlyVisible","map_default","a","map","obj","set_default","toConsumableArray","dimension","rows","columns","keys","primitivePosition","_","toVisit","position","Positional","primitive","targetObject","hidden","has","delete","connected","dfs","adjacent","flatten","arrs","reduce","acc","arr","from_default","values","positionals","diffs","pushDiff","pos","transform","intermediateObject","set","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","adj","_iterator2","err","return","construct","Collection","field1","field2","dimen1","dimen2","visibleRows","hiddenRows","pos1","pos2","_ref3","right","bottom","_ref4","above","aux","p1","p2","_ref5","p1Obj","p2Obj","EMPTY","row","CHAR_BIT","Base64","require","BitStreamWriter","classPrivateFieldGet","_bitsInBuffer","_stream","_buffer","classPrivateFieldSet","writeBitCount","_flush","write","partitionBitCount","self","writeNext","v","_writeNext","_writeNext2","slicedToArray","newV","f","_writeNext3","_writeNext4","w","fromByteArray","PrefixTreeNode","_ref$entry","entry","_ref$entry2","frequency","_ref$branches","branches","_ref$branches2","left","node1","node2","ostream","isLeaf","LEAF","charCodeAt","BRANCH","to","istream","read","from","String","fromCharCode","PrefixTree","frequencies","_root","writable","queue","TinyQueue","entries_default","comparator","pop","node","LEFT","writePrefix","appendBit","bit","encoding","RIGHT","Field_Serializer","Field","Serializer","repeat","farLeft","wall","unshift","join","encodingTree","Field_Deserializer","Deserializer","getSymbolToObjectMapping","values_default","mapping","fromAsciiArt","stream","sym2obj","split","Math","ceil","count","top","rowNoWalls","_rowNoWalls","toArray","rest","_rest","_rest2","below","fromBitStream","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","symbolFromStream","ConnectionBitField","BELOW","ABOVE","_ref$columns","_ref$visibleRows","_ref$hiddenRows","_data","_ref2$row","_ref2$column","column","floor","createClass","constructor","includes","cloned","BitStreamReader","BitStreamReader_buffer","BitStreamReader_bitsInBuffer","BitStreamReader_stream","toByteArray","bitCount","shouldContinue","RED","YELLOW","BLUE","GREEN","PURPLE","BLOCK","IRON","NUISANCE","HARD_NUISANCE","MAX_BIT_COUNT","Game","rule","actualParams","defaultParams","partitionSizes","index","writeVariableLength","game","Modes","indexOf","toBitStream","finalize","array","objectKeys","k","readVariableLength","BLOCK_WIDTH","RECOVERY_FRAME","STATE_IDLE","STATE_END","STATE_PLAY","STATE_STEP","STATE_RESET","PuyoSimulatorFieldvue_type_script_lang_js_","container","bg","puyo","pixifield","playable","props","watch","newState","oldState","$emit","methods","timelinePromise","timeline","promise_default","resolve","eventCallback","setpuyo","connections","asyncToGenerator","regeneratorRuntime","mark","_callee","condition","wrap","_context","prev","abrupt","gravity","t0","sent","clear","_play","_callee2","_context2","children","removeChild","Game_Game","fromBase64","loadpuyo","_gravity","_callee4","tl_arr","gravitationalDiff","tl","drop_animation","_this2","_context4","gravitate","TweenMax","paused","pixi","y","ease","scaleY","yoyo","finish","_callee3","_context3","_x","all","then","_clear","_callee6","flattenedConnections","clear_animation","_this3","_context6","alpha","onComplete","_callee5","_context5","_x2","loadbg","bgtex","lib","resources","textures","TilingSprite","screen","width","height","addChild","bgleft","bgtop","pole1_left","pole1_right","x","pole0_left","pole0_right","block","init","Field_Field","skintex","thisPuyo","texture","created","_this4","fill","antialias","transparent","resolution","stage","add","load","mounted","document","getElementById","appendChild","view","destroyed","destroy","src_PuyoSimulatorFieldvue_type_script_lang_js_","component","componentNormalizer","PuyoSimulatorField","PuyoSimulatorPlayervue_type_script_lang_js_","components","PuyoField","computed","src_PuyoSimulatorPlayervue_type_script_lang_js_","PuyoSimulatorPlayer_component","PuyoSimulatorPlayer","PuyoSimulatorEditorvue_type_script_lang_js_","PuyoPlayer","minConnections","src_PuyoSimulatorEditorvue_type_script_lang_js_","PuyoSimulatorEditor_component","PuyoSimulatorEditor","NuisanceRateGenerator","initialRate","_initialRate","_update","rate","POOL_0_FACTOR","POOL_1_FACTOR","MAX_UPDATE_COUNT","ratePool","updateCount","pool","Rule","initialNuisanceRate","marginTime","minClearConnection","point","_ref2$time","time","adjustedRate","nuisanceRate","_ref3$time","UPDATE_RATE","_ref4$time","clamp","number","min","max","RULE_KEYS","RULE_PARTITION_SIZES","DEFAULT_RULE","nuisanceTransformPoint","level","DIMENSION_KEYS","DEFAULT_DIMENSION","DIMENSION_PARTITION_SIZES","Tsu","_ref$dimension","assertThisInitialized","findConnections","clearingDiff","flattenConnectionMap","clone","headerToBitStream","params","headerFromBitStream","_Game$Deserializer$ar","array2objects","_Game$Deserializer$ar2","_class3","chain","colorCount","abs","colorBonus","groupSize","bonusConnection","connectionMap","transformDiffs","groupSizes","sizes","connection","sum","transformPoint","chainBonus","groupBonus","GAME_ID","PuyoSimulatorvue_type_script_lang_js_","PuyoEditor","Tsu_Tsu","gtr","iter","BitStreamReader_BitStreamReader","initial","_game$rule$points","_game$rule$points2","base","bonus","toAsciiArt","nuisanceRateMultiplier","src_PuyoSimulatorvue_type_script_lang_js_","PuyoSimulator_component","PuyoSimulator","Vue","config","productionTip","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PuyoSimulator_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PuyoSimulator_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAGAe,KAAAhB,GAEA,MAAAO,EAAAC,OACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,IAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,qBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,kBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,IAEA,IAAAC,EAAAC,OAAA,gBAAAA,OAAA,oBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,KAAA,qBAEAU,kFCtJA,IAAA0C,EAAAnC,EAAA,QAAAoC,EAAApC,EAAA2B,EAAAQ,GAA0hBC,EAAG,uCCA7hB,IAAAC,EAAArC,EAAA,QAAAsC,EAAAtC,EAAA2B,EAAAU,GAA0hBC,EAAG,sGCAzhBC,EAAM,WAAgB,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,MAAA,CAAOC,GAAA,cAAkB,CAAAH,EAAA,cAAmBE,MAAA,CAAOE,OAAAR,EAAAQ,UAAqBJ,EAAA,OAAAJ,EAAAS,GAAA,oBAAAT,EAAAU,GAAAV,EAAAW,OAAA,sBAAAX,EAAAU,GAAAV,EAAAQ,QAAA,uBAAAR,EAAAU,GAAAV,EAAAY,SAAA,mDAAAZ,EAAAU,GAAAV,EAAAa,cAAA,qBAAAb,EAAAU,GAAAV,EAAAc,OAAA,gBAAAd,EAAAU,GAAAV,EAAAe,QAAA,oEAAAf,EAAAU,GAAAV,EAAAgB,YAAA,iBAClLC,EAAA,oCCDIC,EAAM,WAAgB,IAAAlB,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBe,YAAA,UAAqB,CAAAf,EAAA,cAAmBE,MAAA,CAAOE,OAAAR,EAAAQ,UAAqBR,EAAAoB,GAAA,QAC1KC,EAAe,YAAiB,IAAArB,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBe,YAAA,mBAA8B,CAAAf,EAAA,MAAWe,YAAA,iBAA4B,CAAAf,EAAA,MAAWe,YAAA,uBAAiCf,EAAA,MAAWe,YAAA,yBAAmCf,EAAA,MAAWe,YAAA,wBAAkCf,EAAA,MAAWe,YAAA,0BAAoCf,EAAA,MAAWe,YAAA,gCCDtXG,EAAM,WAAgB,IAAAtB,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBe,YAAA,UAAqB,CAAAf,EAAA,aAAkBE,MAAA,CAAOE,OAAAR,EAAAQ,OAAAe,MAAAvB,EAAAuB,OAAsCC,GAAA,CAAKC,eAAA,SAAAC,GAAgC1B,EAAAuB,MAAAG,MAAmBtB,EAAA,MAAWe,YAAA,mBAA8B,CAAAnB,EAAA2B,QAA8I3B,EAAA4B,KAA9IxB,EAAA,MAA0BoB,GAAA,CAAIK,MAAA,SAAAH,GAAkD,OAAzBA,EAAAI,kBAAyB9B,EAAA+B,KAAAL,MAA0B,CAAAtB,EAAA,KAAUe,YAAA,kBAA0BnB,EAAA,QAAAI,EAAA,MAAoCoB,GAAA,CAAIK,MAAA,SAAAH,GAAkD,OAAzBA,EAAAI,kBAAyB9B,EAAAgC,KAAAN,MAA0B,CAAAtB,EAAA,KAAUe,YAAA,mBAA2BnB,EAAA4B,KAAAxB,EAAA,MAAsBoB,GAAA,CAAIK,MAAA,SAAAH,GAAkD,OAAzBA,EAAAI,kBAAyB9B,EAAAiC,KAAAP,MAA0B,CAAAtB,EAAA,KAAUe,YAAA,0BAAkCf,EAAA,MAAaoB,GAAA,CAAIK,MAAA,SAAAH,GAAkD,OAAzBA,EAAAI,kBAAyB9B,EAAAkC,MAAAR,MAA2B,CAAAtB,EAAA,KAAUe,YAAA,8BAAmC,IAC/1BgB,EAAe,GCDfC,EAAM,WAAgB,IAAApC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,MAAA,CAAOC,GAAA,gBAC7G8B,EAAe,yTCDbC,EAAc,GACLA,IAEfC,IAAsBD,EAAa,aAAc,CAC/C3D,MACE,SAAAA,IAyBQ,IAAA6D,EAAAvC,KAAAwC,EAAAC,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAAIE,EAAAH,EAlBNI,eAkBM,IAAAD,EAlBY,SAACE,GAAD,OAAgBN,GAkB5BI,EAAAG,EAAAN,EALNO,uBAKM,IAAAD,EALY,SAACD,GAAD,OAAgBN,GAK5BO,EAAAE,EAAAR,EAHNS,qBAGM,IAAAD,KAAAE,EAAAV,EADNW,cACM,IAAAD,EADY,IACZA,EAAA3G,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAAtB,GACNsB,KAAK4C,QAAUA,EACf5C,KAAK+C,gBAAkBA,EACvB/C,KAAKiD,cAAgBA,EACrBjD,KAAKmD,OAASA,EACdE,IAAcrD,SAMpBsC,IAAsBD,EAAa,QAAS,CAC1C3D,MAAO,IAAI2D,EAAYiB,WAAW,CAAEL,eAAe,EAAME,OAAQ,MACjE9E,YAAY,0HC3COkF,aAmCnB,SAAAA,EAAAf,GAA4C,IAA9BgB,EAA8BhB,EAA9BgB,KAAMX,EAAwBL,EAAxBK,WAAYY,EAAYjB,EAAZiB,SAE9B,OAF0ClH,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAAuD,GAC1CvD,KAAK6C,WAAaA,EACV7C,KAAKwD,KAAOA,GAClB,KAAKD,EAAKG,KAAKC,UAAW3D,KAAK4D,UAAYH,EAAgB,MAC3D,KAAKF,EAAKG,KAAKG,SAAW7D,KAAK8D,gBAAkBL,EAAU,MAE7DJ,IAAcrD,6DAcd,GAAKA,KAAK+D,MAEV,OAAQ/D,KAAKwD,MACX,KAAKD,EAAKG,KAAKC,UAAW3D,KAAK6C,WAAW1D,OAASa,KAAK4D,UAAW,MACnE,KAAKL,EAAKG,KAAKG,SAAf,IAAAG,EAC4D,CAAEhE,KAAK8D,gBAAgB3E,OAAQa,KAAK6C,WAAW1D,QAAvGa,KAAK6C,WAAW1D,OADpB6E,EAAA,GAC4BhE,KAAK8D,gBAAgB3E,OADjD6E,EAAA,GAEE,qCAhBJ,IAAKhE,KAAK6C,WAAWkB,MAAO,OAAO,EAEnC,OAAQ/D,KAAKwD,MACX,KAAKD,EAAKG,KAAKC,UAAW,OAAO,EACjC,KAAKJ,EAAKG,KAAKG,SAAW,OAAO7D,KAAK6C,WAAWnC,OAASV,KAAK8D,gBAAgBpD,MAC/E,QAAS,OAAO,2BAlDD6C,2BASjB,SAAAU,IAAqB,IAAAC,EAAA3H,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAAiE,GAAA,QAAAE,EAAA1B,UAAArG,OAANgI,EAAM,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAANF,EAAME,GAAA7B,UAAA6B,GAAA,OAAA/H,OAAAgI,EAAA,KAAAhI,CAAAyD,MAAAkE,EAAA3H,OAAAiI,EAAA,KAAAjI,CAAA0H,IAAAvH,KAAAK,MAAAmH,EAAA,CAAAlE,MAAAyE,OAAWL,gFACtBpE,KAAK0E,QAAQ,SAAAC,GAAI,OAAIA,EAAK5H,gCAFJsH,wBARfd,SAaL,CAWZM,SAAU,GAQVF,UAAW,SC7BMiB,qHAgBIlE,KAAiE,IAAxDmE,EAAwDrC,EAAxDqC,cAAwDC,EAAAtC,EAAzCuC,qBAAyC,IAAAD,EAAzB,EAAyBA,EAAAE,EAAAxC,EAAtByC,mBAAsB,IAAAD,KAClF/H,EAAS,IAAIiI,EAAAC,EAAIN,EAAcO,IAAI,SAAAC,GAAG,MAAI,CAAEA,EAAK,OA+CrD,OA5CA,IAAAC,EAAAH,EAAA5I,OAAAgJ,EAAA,KAAAhJ,CAAY8H,MAAM3D,EAAM8E,UAAUC,KAAO/E,EAAM8E,UAAUE,SAASC,SAG/DjB,QAAQ,SAAUkB,EAAmBC,EAAGC,GACvC,IAAMC,EAAW,IAAIrF,EAAMsF,WAAW,CAAEC,UAAWL,IAC7CM,EAAeH,EAAS5G,OAE9B,GACK8F,GAAec,EAASI,SAExBlJ,EAAOmJ,IAAIF,GAIdJ,EAAQO,OAAON,EAASE,eAP1B,CAWA,IAAIK,EAAY,IAGhB,SAAUC,EAAIR,GAEPD,EAAQM,IAAIL,EAASE,YAEtBC,IAAiBH,EAAS5G,SAG9B2G,EAAQO,OAAON,EAASE,WAIxBK,EAAUhK,KAAKyJ,GAIfA,EAASS,SAAS9B,QAAQ6B,KAf5B,CAgBGR,GAECO,EAAUlK,QAAU2I,GACtB9H,EAAOqB,IAAI4H,GAAc5J,KAAKgK,MAI7BrJ,+CAYmBmI,GAC1B,IAAIqB,EAAU,SAAAC,GAAI,OAAIA,EAAKC,OAAO,SAACC,EAAKC,GAAN,OAAcD,EAAInC,OAAOoC,IAAM,KAEjE,OAAOJ,EAAQA,EAAQK,IAAW1B,EAAI2B,iDAqBpBC,GAClB,IAAIC,EAAQ,IAAI/B,EAAAC,EAMV+B,EAAW,SAASC,GAA0C,IAArCC,EAAqC3E,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,GAAzB,SAAA4C,GAAG,OAAIA,EAAIzC,QAAQuE,IAC5D,GAAKA,EAAIpD,MAAT,CAIA,IAAIsD,EAAqBJ,EAAMb,IAAIe,EAAIlB,WAAagB,EAAM3I,IAAI6I,EAAIlB,WAAWrC,UACzBuD,EAAIhI,OACpDyE,EAAYwD,EAAUC,GACtBA,IAAuBzD,GAE3BqD,EAAMK,IAAIH,EAAIlB,UAAW,IAAI1C,EAAK,CAChCC,KAAMD,EAAKG,KAAKC,UAChBd,WAAYsE,EACZ1D,SAAUG,OApBiB2D,GAAA,EAAAC,GAAA,EAAAC,OAAA/E,EAAA,IAwB/B,QAAAgF,EAAAC,EAAAC,IAAkBZ,KAAlBO,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAA+B,KAApBJ,EAAoBO,EAAAhJ,MAC7BwI,EAASC,GADoB,IAAAY,GAAA,EAAAC,GAAA,EAAAC,OAAAvF,EAAA,IAE7B,IAF6B,IAE7BwF,EAF6BC,EAAA,eAElBC,EAFkBF,EAAAxJ,MAG3BwI,EAASkB,EAAK,SAAA/C,GAAG,OAAIA,EAAItC,gBAAgBqF,MAD3CC,EAAAT,IAAkBT,EAAIX,YAAtBuB,GAAAG,EAAAG,EAAAR,QAAAC,MAAAC,GAAA,EAAgCI,IAFH,MAAAG,GAAAN,GAAA,EAAAC,EAAAK,EAAA,YAAAP,GAAA,MAAAM,EAAAE,QAAAF,EAAAE,SAAA,WAAAP,EAAA,MAAAC,KAxBA,MAAAK,GAAAd,GAAA,EAAAC,EAAAa,EAAA,YAAAf,GAAA,MAAAI,EAAAY,QAAAZ,EAAAY,SAAA,WAAAf,EAAA,MAAAC,GA+B/B,OAAAlL,OAAAiM,EAAA,KAAAjM,CAAWgH,EAAKkF,WAAhBlM,OAAAgJ,EAAA,KAAAhJ,CAA8B0K,EAAMF,wCAe1B2B,EAAQC,GAAQ,IAAA3E,EACH,CAAC0E,EAAOlD,UAAWmD,EAAOnD,WAA5CoD,EADqB5E,EAAA,GACb6E,EADa7E,EAAA,GAI1B,GAAI4E,EAAOlD,UAAgBmD,EAAOnD,SAC9BkD,EAAOE,cAAgBD,EAAOC,aAC9BF,EAAOG,aAAgBF,EAAOE,WAFlC,CAKA,IADA,IAAI9L,EAAS,IAAIsG,EAAKkF,WACZO,EAAe,IAAIN,EAAO1C,WAApBiD,EAAgC,IAAIN,EAAO3C,WACtDgD,EAAKjF,MADVmF,EAEoB,CAACF,EAAKG,MAAMC,OAAQH,EAAKE,MAAMC,QAA7CJ,EAFNE,EAAA,GAEYD,EAFZC,EAAA,GAAAA,EAIE,IADA,IAAAA,EACOF,EAAKjF,MAAZsF,EAAkC,CAACL,EAAKM,MAAOL,EAAKK,OAAhCN,EAApBK,EAAA,GAA0BJ,EAA1BI,EAAA,GAAAA,EAA4D,KAAAA,EACtDL,EAAK7J,SAAW8J,EAAK9J,QACvBlC,EAAOX,KAAK,IAAIiH,EAAK,CACnBC,KAAMD,EAAKG,KAAKC,UAChBd,WAAYmG,EACZvF,SAAUwF,EAAK9J,UAMvB,OAAOlC,6CAagByD,GAcvB,IAbA,IAAIzD,EAAS,IAAIsG,EAAKkF,WAIlBc,EAAM,IAAIrE,EAAAC,EASJqE,EAAW,IAAI9I,EAAMsF,WAAjByD,EAA6B,IAAI/I,EAAMsF,WAChDwD,EAAGzF,MADR2F,EAEgB,CAACF,EAAGL,MAAMC,OAAQK,EAAGN,MAAMC,QAArCI,EAFNE,EAAA,GAEUD,EAFVC,EAAA,GAAAA,EAGE,IADkD,IAAAA,EAC3CF,EAAGzF,MAAOyF,EAAKA,EAAGF,MAAO,CAC9B,IAAMK,EAAQJ,EAAIjL,IAAIkL,EAAGvD,YAAcuD,EAAGrK,OACpCyK,EAAQL,EAAIjL,IAAImL,EAAGxD,YAAcwD,EAAGtK,OAEtCwK,IAAUtH,EAAYwH,QAItBF,EAAM1G,gBAAewG,EAAGK,IAAMN,EAAGM,KAEjCH,IAAUC,IAEZ3M,EAAOX,KAAK,IAAIiH,EAAK,CACnBC,KAAMD,EAAKG,KAAKG,SAChBhB,WAAY2G,EACZ/F,SAAUgG,KAIZF,EAAIjC,IAAIkC,EAAGvD,UAAW2D,GACtBL,EAAIjC,IAAImC,EAAGxD,UAAW0D,IAIxBF,EAAKA,EAAGH,OAIZ,OAAOrM,WCvOL8M,aAAW,GAEXC,EAASC,EAAQ,QAEFC,gFAET,mCAEM,mCAGN,oCAED,WAEoB,IAAvB3N,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAAoK,MAEJ7N,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAAqK,IAAa/N,KAAKC,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAAsK,KAAiBP,EAAWxN,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAHoK,KAC3C7N,OAAAgO,EAAA,KAAAhO,CAAAyD,KAAAsK,GAAA/N,OAAAgO,EAAA,KAAAhO,CAAeyD,KAAfoK,GAAoC,gEASN,IAAxB1L,EAAwB8D,EAAxB9D,MAAO8L,EAAiBhI,EAAjBgI,cACTA,GAAiB,IAMrBjO,OAAAgO,EAAA,KAAAhO,CAAAyD,KAAAsK,GAAgB/N,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAAsK,KAAgB,EAAO5L,GAAU8L,EAAgB,EAAM,GAGnEjO,OAAAgO,EAAA,KAAAhO,CAAEyD,KAAFoK,IAAA7N,OAAA4N,EAAA,KAAA5N,CAAEyD,KAAFoK,IAAA,GAAuBL,IAAa,GAAGxN,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAAyK,IAAA/N,KAAAsD,MAG3CA,KAAK0K,MAAM,CAAEhM,MAAOA,EAAO8L,cAAeA,EAAgB,oDA2BK,IAA3C9L,EAA2CsF,EAA3CtF,MAAO8L,EAAoCxG,EAApCwG,cAAeG,EAAqB3G,EAArB2G,kBACtCC,EAAO5K,KACP6K,EAAY,SAAZA,EAAqBC,EAAG/M,GAC1B,GAAIA,GAAK4M,EACP,MAAO,CAACG,IAAMH,EACN,WACEC,EAAKF,MAAM,CAAEhM,MAAO,EAAG8L,cAAe,IACtCI,EAAKF,MAAM,CAAEhM,MAAOoM,EAAGN,cAAeG,MAE3C,IAAAI,EACWF,EAAUC,EAAG/M,EAAI4M,GAD5BK,EAAAzO,OAAA0O,EAAA,KAAA1O,CAAAwO,EAAA,GACAG,EADAF,EAAA,GACMG,EADNH,EAAA,GAEL,MAAO,CAACE,IAASP,EACT,WACe,IAATO,IACFN,EAAKF,MAAM,CAAEhM,MAAO,EAAG8L,cAAe,IACtCI,EAAKF,MAAM,CAAEhM,MAAOwM,EAAMV,cAAeG,KAE3CQ,OAjBiDC,EAsBnDP,EAAUnM,EAAO8L,GAtBkCa,EAAA9O,OAAA0O,EAAA,KAAA1O,CAAA6O,EAAA,GAsBxDE,EAtBwDD,EAAA,GAuB/DC,uCAUA,OAFA/O,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAAyK,IAAA/N,KAAAsD,MACAqD,IAAcrD,MACPgK,EAAOuB,cAAPhP,OAAA4N,EAAA,KAAA5N,CAAqByD,KAArBqK,+FClGLmB,cA6BJ,SAAAA,EAAAhJ,GAA+E,IAAAiJ,EAAAjJ,EAAjEkJ,MAAiED,OAAA,IAAAA,EAApC,GAAoCA,EAAA,IAAAE,EAAApP,OAAA0O,EAAA,KAAA1O,CAAAkP,EAAA,GAAzDtI,EAAyDwI,EAAA,GAAjDC,EAAiDD,EAAA,GAAAE,EAAArJ,EAAhCsJ,SAAgCD,OAAA,IAAAA,EAAN,GAAMA,EAAA,IAAAE,EAAAxP,OAAA0O,EAAA,KAAA1O,CAAAsP,EAAA,GAArBG,EAAqBD,EAAA,GAAf5C,EAAe4C,EAAA,GAAAxP,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAAwL,GACxEQ,GAAS7C,GAMZnJ,KAAKmD,OAAS6I,EAAK7I,OAASgG,EAAMhG,OAClCnD,KAAK4L,UAAYI,EAAKJ,UAAYzC,EAAMyC,UACxC5L,KAAKgM,KAAOA,EACZhM,KAAKmJ,MAAQA,IARbnJ,KAAKmD,OAASA,EACdnD,KAAK4L,UAAYA,EACjB5L,KAAKgM,KAAO,KACZhM,KAAKmJ,MAAQ,MAQf9F,IAAcrD,qEAhCEiM,EAAOC,GACvB,OAAOD,EAAML,UAAYM,EAAMN,WAAa,EACrCK,EAAML,UAAYM,EAAMN,UAAa,EAClCK,EAAM9I,OAAS+I,EAAM/I,QAAa,EAClC8I,EAAM9I,OAAS+I,EAAM/I,OAAa,EACA,uDA+BnC,OAAqB,OAAdnD,KAAKgM,MAAgC,OAAfhM,KAAKmJ,iCAoB1CgD,GACGnM,KAAKoM,UACPD,EAAQzB,MAAM,CAAEhM,MAAO8M,EAAea,KAAM7B,cAAe,IAC3D2B,EAAQzB,MAAM,CAAEhM,MAAOsB,KAAKmD,OAAOmJ,WAAW,GAAI9B,cAAe,MAEjE2B,EAAQzB,MAAM,CAAEhM,MAAO8M,EAAee,OAAQ/B,cAAe,IAC7DxK,KAAKgM,KAAKQ,GAAGL,GACbnM,KAAKmJ,MAAMqD,GAAGL,mCAnBNM,GACV,OAAIA,EAAQC,KAAK,KAAO1M,KAAKuM,OACpB,IAAIvM,KAAK,CAAE8L,SAAU,CAAC9L,KAAK2M,KAAKF,GAAUzM,KAAK2M,KAAKF,MAGpD,IAAIzM,KAAK,CAAE0L,MAAO,CAACkB,OAAOC,aAAaJ,EAAQC,KAAK,IAAK,6BA3DhElB,YAgDY,kBAhDZA,UAiDU,OAgCKsB,cAuBnB,SAAAA,EAAYC,GAAaxQ,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAA8M,GAAAE,GAAA1F,IAAAtH,KAAA,CAAAiN,UAAA,EAAAvO,WAAA,IACvB,IAAIwO,EAAQ,IAAIC,QAAUC,KAAeL,GAAa3H,IAAI,SAAAsG,GAAK,OAAI,IAAIF,GAAe,CAAEE,MAAOA,MACrEF,GAAe6B,YACzC,MAAOH,EAAM9Q,OAAS,EACpB8Q,EAAM5Q,KAAK,IAAIkP,GAAe,CAAEM,SAAU,CAACoB,EAAMI,MAAOJ,EAAMI,UAGhE/Q,OAAAgO,EAAA,KAAAhO,CAAAyD,KAAAgN,GAAaE,EAAMI,yDAflBnB,GAAW5P,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAAgN,IAAWR,GAAGL,kCAPhBM,GACV,IAAIxP,EAAS,IAAI+C,KAAK,IAEtB,OADAzD,OAAAgO,EAAA,KAAAhO,CAAAU,EAAM+P,GAASxB,GAAemB,KAAKF,IAC5BxP,+DA0BQwP,GACf,IAAK,IAAIc,EAAOhR,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAHgN,KACPO,EAAKnB,SACNmB,EAAOd,EAAQC,KAAK,KAAOI,EAAWU,KAAOD,EAAKvB,KAAOuB,EAAKpE,OACnE,OAAOoE,EAAKpK,0CAauD,IAA5DiC,EAA4D3C,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,GAAtD,GAAI8K,EAAkD9K,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,GAAAlG,OAAA4N,EAAA,KAAA5N,CAA3CyD,KAA2CgN,IAA/BS,EAA+BhL,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,GAAjB,aAClD,GAAI8K,EAAKnB,SACPhH,EAAImI,EAAKpK,QAAUsK,MACd,CAGL,IAAMC,EAAY,SAAAC,GAAG,OAAI,SAASxB,GAChCsB,EAAYtB,GACZA,EAAQzB,MAAM,CAAEhM,MAAOiP,EAAKnD,cAAe,MAE7CxK,KAAK4N,SAASxI,EAAKmI,EAAKvB,KAAM0B,EAAUZ,EAAWU,OACnDxN,KAAK4N,SAASxI,EAAKmI,EAAKpE,MAAOuE,EAAUZ,EAAWe,QAGtD,OAAOzI,qCApEU0H,UAiCL,kBAjCKA,WAkCJ,GClHF,IAAAgB,GAAA,SAASC,GAEtB,IAAIC,EAAa,CACjBA,WAAwB,SAAStN,GAI/B,IAFA,IAAI+E,EAAO,CAAE,KAAO,IAAIwI,OAAiC,EAA1BvN,EAAM8E,UAAUE,QAAc,GAAK,MAEzDyB,EAAM,IAAIzG,EAAMsF,WAAYmB,EAAIpD,MAAOoD,EAAMA,EAAI+G,QAAQ5E,MAAO,CAIvE,IAHA,IAAIQ,EAAM,IACNqE,EAAOhH,EAAIhB,OAAS,KAAO,KAExBgB,EAAIpD,MAAOoD,EAAMA,EAAIgC,MAC1BW,GAAO3C,EAAIhI,OAAOgE,OAAS,IAG7BsC,EAAK2I,QAAQD,EAAOrE,EAAMqE,GAG5B,OAAO1I,EAAK4I,KAAK,OAGnBL,YAAyB,SAAStN,GAGhC,IAHwE,IAAjCyL,EAAiC1J,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,GAAvB,IAAIyH,EAEjD6C,EAAc,GACT5F,EAAM,IAAIzG,EAAMsF,WAAYmB,EAAIpD,MAAOoD,EAAMA,EAAIiC,OAAOD,MAC/D,KAAOhC,EAAIpD,MAAOoD,EAAMA,EAAImC,MAAO,CACjC,IAAMnG,EAASgE,EAAIhI,OAAOgE,OAC1B4J,EAAY5J,GAAU4J,EAAY5J,GAAU4J,EAAY5J,GAAU,EAAI,EAI1E,IAAImL,EAAe,IAAIxB,GAAWC,GAKlCuB,EAAa9B,GAAGL,GAMhB,IAAIyB,EAAWU,EAAaV,WArB4CrG,GAAA,EAAAC,GAAA,EAAAC,OAAA/E,EAAA,IAsBxE,QAAAgF,EAAAC,EAAAC,IAAgBlH,KAAhB6G,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,OAASJ,EAATO,EAAAhJ,MAAuBkP,EAASzG,EAAIhI,OAAOgE,QAAQgJ,IAtBqB,MAAA7D,GAAAd,GAAA,EAAAC,EAAAa,EAAA,YAAAf,GAAA,MAAAI,EAAAY,QAAAZ,EAAAY,SAAA,WAAAf,EAAA,MAAAC,GAwBxE,OAAO0E,IAGT,OAAO6B,gBCjDMO,cAAA,SAASR,GACtB,IAAIS,EAAe,GAGbC,EAA2B,WAC/B,OAAOC,IAAcX,EAAMxR,QACboK,OAAO,SAACgI,EAAStJ,GAAV,OAAmBsJ,EAAQtJ,EAAIlC,QAAUkC,EAAKsJ,GAAU,KAoD/E,OAjDAH,EAAaI,aAAe,SAASC,GACnC,IAAIC,EAAUL,IACVhJ,EAAOoJ,EAAOE,MAAM,MACpBrO,EAAQ,IAAIqN,EAAM,CAKpBrI,QAASsJ,KAAKC,KAAKxJ,EAAK6H,MAAM7N,MAAM,GAAI,GAAGrD,OAAS,GAEpD2M,WAAa,SAASmG,GAAO,IAAA3H,GAAA,EAAAC,GAAA,EAAAC,OAAA/E,EAAA,IAAE,QAAAgF,EAAAC,EAAAC,IAAgBnC,KAAhB8B,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,OAASuC,EAATpC,EAAAhJ,MAAsB,GAAc,KAAVoL,EAAI,GAAyB,QAAZoF,GAA7C,MAAA5G,GAAAd,GAAA,EAAAC,EAAAa,EAAA,YAAAf,GAAA,MAAAI,EAAAY,QAAAZ,EAAAY,SAAA,WAAAf,EAAA,MAAAC,GAAgE,OAAOyH,EAAvF,CAAiG,GAC9GpG,YAAarD,EAAKrJ,OAAS4D,KAAK+I,aAG9B5B,GAAM,IAAIzG,EAAMsF,YAAamJ,IAdUpH,GAAA,EAAAC,GAAA,EAAAC,OAAAvF,EAAA,IAgB3C,QAAAwF,EAAAG,EAAAT,IAAgBnC,KAAhBsC,GAAAG,EAAAG,EAAAR,QAAAC,MAAAC,GAAA,EAAsB,CAIpB,IAJoB,IAAb+B,EAAa5B,EAAAxJ,MAEhB0Q,EAAatF,EAAIrK,MAAM,GAAI,GAE/B4P,EAAA9S,OAAA+S,GAAA,KAAA/S,CAAgC6S,GAAtBjM,EAAVkM,EAAA,GAAwBE,GAAxBF,EAAA,GAAAA,EAAA5P,MAAA,IACK8P,EAAKnT,OAAS,EADnBoT,EAE4BD,EAF5BE,EAAAlT,OAAA+S,GAAA,KAAA/S,CAAAiT,GAEMrM,EAFNsM,EAAA,GAAAA,EAAA,GAEoBF,EAFpBE,EAAAhQ,MAAA,GAAA+P,EAGE,KAAAA,EAAAC,EACAtI,EAAIhI,OAAS2P,EAAQ3L,GACrBgE,EAAMA,EAAIgC,MAEZhC,EAAMA,EAAI+G,QAAQwB,OA3BuB,MAAApH,GAAAN,GAAA,EAAAC,EAAAK,EAAA,YAAAP,GAAA,MAAAM,EAAAE,QAAAF,EAAAE,SAAA,WAAAP,EAAA,MAAAC,GA8B3C,OAAOvH,GAGT8N,EAAamB,cAAgB,SAASjP,EAAO+L,GAI3C,IAAI6B,EAAexB,GAAWH,KAAKF,GAM/BqC,EAAUL,IAVsCmB,GAAA,EAAAC,GAAA,EAAAC,OAAApN,EAAA,IAWpD,QAAAqN,EAAAC,EAAApI,IAAgBlH,KAAhBkP,GAAAG,EAAAC,EAAAnI,QAAAC,MAAA8H,GAAA,OAASzI,EAAT4I,EAAArR,MAAuByI,EAAIhI,OAAS2P,EAAQR,EAAa2B,iBAAiBxD,KAXtB,MAAAnE,GAAAuH,GAAA,EAAAC,EAAAxH,EAAA,YAAAsH,GAAA,MAAAI,EAAAzH,QAAAyH,EAAAzH,SAAA,WAAAsH,EAAA,MAAAC,GAapD,OAAOpP,GAGF8N,ICjDH0B,GAAqB,CACzBC,MAAO,EACPC,MAAO,EACPvC,MAAO,EACPL,KAAO,UAGYO,cAyCnB,SAAAA,IAGoB,IAAAvL,EAAAC,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAAI4N,EAAA7N,EAHNkD,eAGM,IAAA2K,EAHS,EAGTA,EAAAC,EAAA9N,EAFNsG,mBAEM,IAAAwH,EAFQ,GAERA,EAAAC,EAAA/N,EADNuG,kBACM,IAAAwH,EADS,EACTA,EAAAhU,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAA+N,GAAAyC,GAAAlJ,IAAAtH,KAAA,CAAAiN,UAAA,EAAAvO,WAAA,IAElBsB,KAAKwF,UAAY,CACfE,QAAaA,GAAe,EAAIA,EAAe,EAC/CoD,YAAaA,GAAe,EAAIA,EAAc,GAC9CC,WAAaA,GAAe,EAAIA,EAAe,EAC/CtD,WAAa,OAAOzF,KAAK8I,YAAc9I,KAAK+I,aAG9CxM,OAAAgO,EAAA,KAAAhO,CAAAyD,KAAAwQ,GAAa,IAEb,IAAI5F,EAAO5K,KASXA,KAAKgG,WAAL,WAUE,SAAA/B,IAAqD,IAAAD,EAAAvB,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAAIgO,EAAAzM,EAAvC8F,WAAuC,IAAA2G,EAAjC,EAAiCA,EAAAC,EAAA1M,EAA9B2M,cAA8B,IAAAD,EAArB,EAAqBA,EAAlBzK,EAAkBjC,EAAlBiC,UACjC,GADmD1J,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAAiE,QACjCvB,IAAduD,EAUFjG,KAAK8J,IAAS7D,EAAY2E,EAAKpF,UAAUC,KACzCzF,KAAK2Q,OAAS3B,KAAK4B,MAAM3K,EAAY2E,EAAKpF,UAAUC,UAC/C,KAAAyD,EACqB,CAACY,EAAK6G,GAA/B3Q,KAAK8J,IADDZ,EAAA,GACMlJ,KAAK2Q,OADXzH,EAAA,IAvBX,OAAA3M,OAAAsU,EAAA,KAAAtU,CAAA0H,EAAA,EAAAjF,IAAA,YAAAV,IAAA,WAoCoB,OAAO0B,KAAK2Q,OAAS/F,EAAKpF,UAAUC,KAAOzF,KAAK8J,MApCpE,CAAA9K,IAAA,QAAAV,IAAA,WAuCgB,OAAO,IAAI0B,KAAK8Q,YAAY,CAAEhH,IAAK9J,KAAK8J,IAAM,EAAG6G,OAAQ3Q,KAAK2Q,WAvC9E,CAAA3R,IAAA,QAAAV,IAAA,WAyCgB,OAAO,IAAI0B,KAAK8Q,YAAY,CAAEhH,IAAK9J,KAAK8J,IAAM,EAAG6G,OAAQ3Q,KAAK2Q,WAzC9E,CAAA3R,IAAA,OAAAV,IAAA,WA2CgB,OAAO,IAAI0B,KAAK8Q,YAAY,CAAEhH,IAAK9J,KAAK8J,IAAS6G,OAAQ3Q,KAAK2Q,OAAS,MA3CvF,CAAA3R,IAAA,QAAAV,IAAA,WA6CgB,OAAO,IAAI0B,KAAK8Q,YAAY,CAAEhH,IAAK9J,KAAK8J,IAAS6G,OAAQ3Q,KAAK2Q,OAAS,MA7CvF,CAAA3R,IAAA,WAAAV,IAAA,WA+CmB,MAAO,CAAC0B,KAAKsJ,MAAOtJ,KAAK0P,MAAO1P,KAAKgM,KAAMhM,KAAKmJ,SA/CnE,CAAAnK,IAAA,MAAAV,IAAA,WAkDmB,OAAO,IAAI0B,KAAK8Q,YAAY,CAAEhH,IAAKc,EAAKpF,UAAUC,KAAO,EAAGkL,OAAQ3Q,KAAK2Q,WAlD5F,CAAA3R,IAAA,WAAAV,IAAA,WAoDmB,OAAO,IAAI0B,KAAK8Q,YAAY,CAAEhH,IAAK9J,KAAK8J,IAAoB6G,OAAQ/F,EAAKpF,UAAUE,QAAU,MApDhH,CAAA1G,IAAA,SAAAV,IAAA,WAsDmB,OAAO,IAAI0B,KAAK8Q,YAAY,CAAEhH,IAAK,EAAyB6G,OAAQ3Q,KAAK2Q,WAtD5F,CAAA3R,IAAA,UAAAV,IAAA,WAwDmB,OAAO,IAAI0B,KAAK8Q,YAAY,CAAEhH,IAAK9J,KAAK8J,IAAoB6G,OAAQ,MAxDvF,CAAA3R,IAAA,SAAAV,IAAA,WA2DiB,OAAOsM,EAAKpF,UAAUsD,aAAe9I,KAAK8J,KAAO9J,KAAK8J,IAAMc,EAAKpF,UAAUC,OA3D5F,CAAAzG,IAAA,QAAAV,IAAA,WA6DgB,OAAQ,GAAK0B,KAAK8J,KAAU9J,KAAK8J,IAASc,EAAKpF,UAAUC,MACjD,GAAKzF,KAAK2Q,QAAU3Q,KAAK2Q,OAAS/F,EAAKpF,UAAUE,UA9DzE,CAAA1G,IAAA,QAAAV,IAAA,WAiEgB,OAAOsM,IAjEvB,CAAA5L,IAAA,cAAAV,IAAA,WAoFI,OAAI0B,KAAKb,OAAOgH,OAAe,EAExB,GAAMnG,KAAK0P,MAAMvJ,QAAUnG,KAAK0P,MAAMvQ,QAAUa,KAAKb,OAAoC,EAA3B+Q,GAAmBC,QAC3EnQ,KAAKsJ,MAAMnD,QAAUnG,KAAKsJ,MAAMnK,QAAUa,KAAKb,OAAoC,EAA3B+Q,GAAmBE,QAC3EpQ,KAAKmJ,MAAMhD,QAAUnG,KAAKmJ,MAAMhK,QAAUa,KAAKb,OAAoC,EAA3B+Q,GAAmBrC,QAC3E7N,KAAKgM,KAAK7F,QAAWnG,KAAKgM,KAAK7M,QAAWa,KAAKb,OAAoC,EAA3B+Q,GAAmB1C,QAzF5F,CAAAxO,IAAA,SAAAV,IAAA,WAiGI,GAAK0B,KAAK+D,MAAV,CADW,IAAAsF,EAGW,CAACrJ,KAAK8J,IAAK9J,KAAK2Q,QAA/B7G,EAHIT,EAAA,GAGCsH,EAHDtH,EAAA,GAKX,OAAI9M,OAAA4N,EAAA,KAAA5N,CAAAqO,EAAI4F,IAAOG,IAAWpU,OAAA4N,EAAA,KAAA5N,CAAAqO,EAAI4F,IAAOG,GAAQ7G,GACpCvN,OAAA4N,EAAA,KAAA5N,CAAAqO,EAAI4F,IAAOG,GAAQ7G,GAEnBiE,EAAMxR,OAAOsN,QAxG1BvC,IAAA,SAiHajC,GACT,GAAKrF,KAAK+D,OAAU2K,IAAcX,EAAMxR,QAAQwU,SAAS1L,GAAzD,CADc,IAAAqE,EAGQ,CAAC1J,KAAK8J,IAAK9J,KAAK2Q,QAA/B7G,EAHOJ,EAAA,GAGFiH,EAHEjH,EAAA,GAKd,GAAIrE,IAAQ0I,EAAMxR,OAAOsN,MAAO,CAC9B,IAAKtN,OAAA4N,EAAA,KAAA5N,CAAAqO,EAAI4F,IAAOG,GAAS,cAClBpU,OAAA4N,EAAA,KAAA5N,CAAAqO,EAAI4F,IAAOG,GAAQ7G,QAErBvN,OAAA4N,EAAA,KAAA5N,CAAAqO,EAAI4F,IAAOG,KAASpU,OAAA4N,EAAA,KAAA5N,CAAAqO,EAAI4F,IAAOG,GAAU,IAC9CpU,OAAA4N,EAAA,KAAA5N,CAAAqO,EAAI4F,IAAOG,GAAQ7G,GAAOzE,OA3HhCpB,EAAA,qKAqISkD,EAAM,IAAInH,KAAKgG,sBAAYmB,EAAIpD,kCAC/BoD,EAAIpD,sBACT,gBAAMoD,SADUA,EAAMA,EAAImC,4BADiBnC,EAAMA,EAAIgC,MAAMC,mGAM/D,IAAI4H,EAAS,IAAIhR,KAAK8Q,YAAY9Q,KAAKwF,WAEvC,OADAjJ,OAAAgO,EAAA,KAAAhO,CAAAyU,EAAMR,GAASjU,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAAwQ,IAAWpL,IAAI,SAAAuL,GAAM,YAAejO,IAAXiO,EAAuBA,EAAOlR,aAAUiD,KACzEsO,qCA7MUjD,YASH1L,kBATG0L,eAcAnJ,kBAdAmJ,gBAmBCC,GAAWD,oBAnBZA,kBAwBGS,GAAaT,KC1CrC,IAAMhE,GAAW,EAEXC,GAASC,EAAQ,QAEFgH,cAWnB,SAAAA,EAAY1Q,GAAQhE,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAAiR,GAAAC,GAAA5J,IAAAtH,KAAA,CAAAiN,UAAA,EAAAvO,MAVV,IAUUyS,GAAA7J,IAAAtH,KAAA,CAAAiN,UAAA,EAAAvO,MATJ,IASI0S,GAAA9J,IAAAtH,KAAA,CAAAiN,UAAA,EAAAvO,WAAA,IAClBnC,OAAAgO,EAAA,KAAAhO,CAAAyD,KAAAoR,GAAetK,IAAWkD,GAAOqH,YAAY9Q,yDAa1C+Q,GAEH,GAAIA,GAAY,EAAG,OAAO,EAG1B,GAA2B,IAAvB/U,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAAmR,IAA0B,CAE5B,GAA4B,IAAxB5U,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAAoR,IAAahV,OAAc,OAE/BG,OAAAgO,EAAA,KAAAhO,CAAAyD,KAAAkR,GAAe3U,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAAoR,IAAavU,SAC5BN,OAAAgO,EAAA,KAAAhO,CAAAyD,KAAAmR,GAAqBpH,IAGvB,IAAM9M,GACWV,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAAkR,KAAA3U,OAAAgO,EAAA,KAAAhO,CAAkByD,KAAlBmR,IAAA5U,OAAA4N,EAAA,KAAA5N,CAAkByD,KAAlBmR,IAAA,GAAwC,IAEtCG,EAAW,EAE9B,OAAOrU,EAAS+C,KAAK0M,KAAK4E,EAAW,8CAOpB3G,GACjB,IAAI1N,EAAS,EACb,EAAG,CACD,IAAIsU,EAAiBvR,KAAK0M,KAAK,GAC/BzP,IAAW0N,EACX1N,GAAU+C,KAAK0M,KAAK/B,SACM,IAAnB4G,GACT,OAAOtU,4CCxDX8Q,GAAMxR,OAAOiV,IAAM,IAAIzD,GAAMxR,OAAO+G,WAAW,CAAEH,OAAQ,IAAKP,QAAS,kBAAMmL,GAAMxR,OAAOsN,SAC1FkE,GAAMxR,OAAOkV,OAAS,IAAI1D,GAAMxR,OAAO+G,WAAW,CAAEH,OAAQ,IAAKP,QAAS,kBAAMmL,GAAMxR,OAAOsN,SAC7FkE,GAAMxR,OAAOmV,KAAO,IAAI3D,GAAMxR,OAAO+G,WAAW,CAAEH,OAAQ,IAAKP,QAAS,kBAAMmL,GAAMxR,OAAOsN,SAC3FkE,GAAMxR,OAAOoV,MAAQ,IAAI5D,GAAMxR,OAAO+G,WAAW,CAAEH,OAAQ,IAAKP,QAAS,kBAAMmL,GAAMxR,OAAOsN,SAC5FkE,GAAMxR,OAAOqV,OAAS,IAAI7D,GAAMxR,OAAO+G,WAAW,CAAEH,OAAQ,IAAKP,QAAS,kBAAMmL,GAAMxR,OAAOsN,SAG7FkE,GAAMxR,OAAOsV,MAAQ,IAAI9D,GAAMxR,OAAO+G,WAAW,CAAEH,OAAQ,IAAKF,eAAe,IAC/E8K,GAAMxR,OAAOuV,KAAO,IAAI/D,GAAMxR,OAAO+G,WAAW,CAAEH,OAAQ,MAG1D4K,GAAMxR,OAAOwV,SAAW,IAAIhE,GAAMxR,OAAO+G,WAAW,CAAEH,OAAQ,IAAKJ,gBAAiB,kBAAMgL,GAAMxR,OAAOsN,SACvGkE,GAAMxR,OAAOyV,cAAgB,IAAIjE,GAAMxR,OAAO+G,WAAW,CAAEH,OAAQ,IAAKJ,gBAAiB,kBAAMgL,GAAMxR,OAAOwV,YAI5G,IAAME,GAAgB,GAEDC,GA4JnB,SAAAA,EAAA1P,GAAiC,IAAnB2P,EAAmB3P,EAAnB2P,KAAM3M,EAAahD,EAAbgD,UAAajJ,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAAkS,GAC/BlS,KAAKmS,KAAOA,EACZnS,KAAKU,MAAQ,IAAIqN,GAAMvI,mBA9JN0M,WAGJ,mBAHIA,qIAyCQ/F,KAKvB,IADC,IAHDiG,EAGCpO,EAHDoO,aACAC,EAECrO,EAFDqO,cACAC,EACCtO,EADDsO,eAESC,EAAQ,EAAGA,EAAQF,EAAcjW,SAAUmW,EAC9CH,EAAaG,KAAWF,EAAcE,GACxCpG,EAAQzB,MAAM,CAAEhM,MAAO,EAAG8L,cAAe,KAEzC2B,EAAQzB,MAAM,CAAEhM,MAAO,EAAG8L,cAAe,IACb,OAAxB4H,EAAaG,GACfpG,EAAQzB,MAAM,CAAEhM,MAAO,EAAG8L,cAAe,KAEzC2B,EAAQzB,MAAM,CAAEhM,MAAO,EAAG8L,cAAe,IACzC2B,EAAQqG,oBAAoB,CAC1B9T,MAAO0T,EAAaG,GACpB/H,cAAeyH,GACftH,kBAAmB2H,EAAeC,2CAgBzBE,GAAuC,IAAjCtG,EAAiC1J,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,GAAvB,IAAIyH,EAOrC,OANAiC,EAAQqG,oBAAoB,CAC1B9T,MAAOwT,GAAKQ,MAAMC,QAAQF,EAAK3B,aAC/BtG,cAAeyH,GACftH,kBAAmB,IAGd8H,EAAK3B,YAAY9C,WAAW4E,YAAYH,EAAMtG,oCASvCsG,GACd,OAAOP,GAAKlE,WAAW4E,YAAYH,GAAMI,oCA3F1BX,sIA8G2B,IAArBY,EAAqB5J,EAArB4J,MAAOC,EAAc7J,EAAd6J,WACxB9V,EAAS,GAD6BsK,GAAA,EAAAC,GAAA,EAAAC,OAAA/E,EAAA,IAE1C,QAAAgF,EAAAC,EAAAC,IAAiBmL,KAAjBxL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAA6B,KAApB5B,EAAoB+B,EAAAhJ,MAC3BzB,EAAOX,KAAKqJ,EAAKgB,OAAO,SAACtB,EAAK2N,GAAN,OAAa3N,EAAI2N,GAAKF,EAAMjW,QAASwI,GAAM,MAH3B,MAAAiD,GAAAd,GAAA,EAAAC,EAAAa,EAAA,YAAAf,GAAA,MAAAI,EAAAY,QAAAZ,EAAAY,SAAA,WAAAf,EAAA,MAAAC,GAK1C,OAAOxK,8CAOkBwP,KAIzB,IADC,IAFD4F,EAEChJ,EAFDgJ,cACAC,EACCjJ,EADDiJ,eAESC,EAAQ,EAAGA,EAAQF,EAAcjW,SAAUmW,EAC1B,IAApB9F,EAAQC,KAAK,KACjB2F,EAAcE,GAA6B,IAApB9F,EAAQC,KAAK,GAAW,KACAD,EAAQwG,mBAAmBX,EAAeC,KAG3F,OAAOF,wCASY5F,GACnB,OAAOyF,GAAKQ,MAAMjG,EAAQwG,mBAAmB,IAAIzE,aAAamB,cAAclD,sCAS5DlM,GAChB,OAAO2R,GAAK1D,aAAamB,cAAc,IAAIsB,GAAgB1Q,cC/K1D,IAAM2S,GAAc,GACdC,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1DC,GAAa,aACbC,GAAY,YACZC,GAAa,aACbC,GAAa,aACbC,GAAc,cCM3BC,GAAA,CACAxV,KAAA,YACArC,KAFA,WAGA,OACA8B,IAAA,KACAgW,UAAA,CACAC,GAAA,KACAC,KAAA,MAEAnB,KAAA,KACAoB,UAAA,KACAC,UAAA,IAGAC,MAAA,CACAxT,OAAAqM,OACAtL,MAAAsL,QAEAoH,MAAA,CACA1S,MADA,SACA2S,EAAAC,GACA,OAAAD,GACA,KAAAX,GACAY,IAAAd,GACApT,KAAA8B,OAEA9B,KAAAmU,MAAA,eAAAf,IAEA,MACA,KAAAG,GACAW,IAAAd,GACApT,KAAAgC,OAEAhC,KAAAmU,MAAA,eAAAf,IAEA,MACA,KAAAI,GACAU,IAAAd,IACAc,IAAAb,GACArT,KAAAiC,QAEAjC,KAAAmU,MAAA,eAAAf,IAEA,MACA,KAAAA,GACA,KAAAC,GACA,QACA,SAIAe,QAAA,CACAC,gBADA,SACAC,EAAA3P,EAAArD,GAAA,IAAAiB,EAAAvC,KACA,WAAAuU,EAAApP,EAAA,SAAAqP,GACAF,EAAAxS,OACAwS,EAAAG,cAAA,wBACA,YAAAnT,GACAiB,EAAAmS,QAAA/P,EAAAb,gBAAAa,EAAAb,gBAAA6Q,aAEAH,SAIAxS,KAZA,eAAA0F,EAAAnL,OAAAqY,EAAA,KAAArY,CAAAsY,mBAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,mBAAAI,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAArN,MAAA,UAaA7H,KAAAsB,QAAA+R,GAbA,CAAA6B,EAAArN,KAAA,eAAAqN,EAAAE,OAAA,wBAAAF,EAAArN,KAAA,EAgBA7H,KAAAqV,UAhBA,UAAAH,EAAAI,GAAAJ,EAAAK,KAAAL,EAAAI,GAAA,CAAAJ,EAAArN,KAAA,eAAAqN,EAAArN,KAAA,EAgBA7H,KAAAwV,QAhBA,OAAAN,EAAAI,GAAAJ,EAAAK,KAAA,OAgBAP,EAhBAE,EAAAI,GAiBAN,EACAhV,KAAAmU,MAAA,eAAAf,IAEApT,KAAAmU,MAAA,eAAAd,IApBA,yBAAA6B,EAAAnT,SAAAgT,EAAA/U,SAAA,SAAAgC,IAAA,OAAA0F,EAAA3K,MAAAiD,KAAAyC,WAAA,OAAAT,EAAA,GAuBAF,KAvBA,eAAA2T,EAAAlZ,OAAAqY,EAAA,KAAArY,CAAAsY,mBAAAC,KAAA,SAAAY,IAAA,IAAAV,EAAA,OAAAH,mBAAAI,KAAA,SAAAU,GAAA,eAAAA,EAAAR,KAAAQ,EAAA9N,MAAA,OAwBAmN,EAAAhV,KAAAsB,QAAA+R,GAxBA,WAyBA2B,EAzBA,CAAAW,EAAA9N,KAAA,YA0BA7H,KAAAsB,QAAAgS,GA1BA,CAAAqC,EAAA9N,KAAA,gBAAA8N,EAAA9N,KAAA,EA2BA7H,KAAAqV,UA3BA,UAAAM,EAAAL,GAAAK,EAAAJ,KAAAI,EAAAL,GAAA,CAAAK,EAAA9N,KAAA,gBAAA8N,EAAA9N,KAAA,EA2BA7H,KAAAwV,QA3BA,OAAAG,EAAAL,GAAAK,EAAAJ,KAAA,QA2BAP,EA3BAW,EAAAL,GAAAK,EAAA9N,KAAA,wBAAA8N,EAAAP,OAAA,kBAAAO,EAAA9N,KAAA,gBAgCA7H,KAAAmU,MAAA,eAAAd,IAhCA,yBAAAsC,EAAA5T,SAAA2T,EAAA1V,SAAA,SAAA8B,IAAA,OAAA2T,EAAA1Y,MAAAiD,KAAAyC,WAAA,OAAAX,EAAA,GAkCAG,MAlCA,WAmCA,QAAA/F,EAAA8D,KAAA0T,UAAAE,KAAAgC,SAAAxZ,OAAA,EAAAF,GAAA,EAAAA,IACA8D,KAAA0T,UAAAE,KAAAiC,YAAA7V,KAAA0T,UAAAE,KAAAgC,SAAA1Z,IAEA8D,KAAAyS,KAAAqD,GAAAtH,aAAAuH,WAAA/V,KAAAO,QACAP,KAAAgW,WACAhW,KAAAmU,MAAA,eAAAf,KAEAiC,QA1CA,eAAAY,EAAA1Z,OAAAqY,EAAA,KAAArY,CAAAsY,mBAAAC,KAAA,SAAAoB,IAAA,IAAAC,EAAAC,EAAA7O,EAAAC,EAAAC,EAAAE,EAAAO,EAAAvD,EAAA0R,EAAAC,EAAAC,EAAAvW,KAAA,OAAA6U,mBAAAI,KAAA,SAAAuB,GAAA,eAAAA,EAAArB,KAAAqB,EAAA3O,MAAA,UA2CAsO,EAAA,GAEAC,EAAApW,KAAAyS,KAAA/R,MAAA+V,YACA,IAAAL,EAAAha,OA9CA,CAAAoa,EAAA3O,KAAA,eAAA2O,EAAApB,OAAA,UA+CA,GA/CA,OAiDA,IAjDA7N,GAAA,EAAAC,GAAA,EAAAC,OAAA/E,EAAA8T,EAAArB,KAAA,EAiDAxN,EAAAC,IAAAwO,KAAA7O,GAAAW,EAAAP,EAAAE,QAAAC,MAAAP,GAAA,EAAA5C,EAAAuD,EAAAxJ,MAEA2X,EAAA,IAAAK,EAAA,MAAAC,QAAA,IACA3W,KAAA0U,QAAA/P,EAAA9B,YACAwT,EAAA7J,GACAxM,KAAA6T,UAAAlP,EAAA9B,WAAAiH,KAAAnF,EAAA9B,WAAA8N,QACAwC,GAAAxO,EAAA9B,WAAAiH,IAAAnF,EAAAb,gBAAAgG,KAAA,GACA,CAAA8M,KAAA,CAAAC,GAAA7W,KAAAyS,KAAA/R,MAAA8E,UAAAC,KAAAd,EAAAb,gBAAAgG,IAAA,GAAAoJ,IACA4D,KAAA,WACAtK,GACAxM,KAAA6T,UAAAlP,EAAA9B,WAAAiH,KAAAnF,EAAA9B,WAAA8N,QACA,GACA,CACAiG,KAAA,CAAAG,OAAA,MAEAvK,GACAxM,KAAA6T,UAAAlP,EAAA9B,WAAAiH,KAAAnF,EAAA9B,WAAA8N,QACA,GACA,CACAiG,KAAA,CAAAG,OAAA,GACAC,MAAA,IAGAhX,KAAA6T,UAAAlP,EAAAb,gBAAAgG,KAAAnF,EAAAb,gBAAA6M,QAAA3Q,KAAA6T,UAAAlP,EAAA9B,WAAAiH,KAAAnF,EAAA9B,WAAA8N,QACA3Q,KAAA6T,UAAAlP,EAAA9B,WAAAiH,KAAAnF,EAAA9B,WAAA8N,QAAA,KACAwF,EAAA7Z,KAAA,CAAA+Z,EAAA1R,IA1EA6R,EAAA3O,KAAA,iBAAA2O,EAAArB,KAAA,GAAAqB,EAAAlB,GAAAkB,EAAA,YAAAhP,GAAA,EAAAC,EAAA+O,EAAAlB,GAAA,QAAAkB,EAAArB,KAAA,GAAAqB,EAAArB,KAAA,GAAA5N,GAAA,MAAAI,EAAAY,QAAAZ,EAAAY,SAAA,WAAAiO,EAAArB,KAAA,IAAA3N,EAAA,CAAAgP,EAAA3O,KAAA,eAAAJ,EAAA,eAAA+O,EAAAS,OAAA,mBAAAT,EAAAS,OAAA,mBA4EAb,EAAArZ,QAEAuZ,EAAAH,EAAA/Q,IAAA,eAAA5C,EAAAjG,OAAAqY,EAAA,KAAArY,CAAAsY,mBAAAC,KAAA,SAAAoC,EAAA7R,GAAA,OAAAwP,mBAAAI,KAAA,SAAAkC,GAAA,eAAAA,EAAAhC,KAAAgC,EAAAtP,MAAA,cAAAsP,EAAA/B,OAAA,SAAAmB,EAAAlC,gBAAAhP,EAAA,GAAAA,EAAA,uCAAA8R,EAAApV,SAAAmV,MAAA,gBAAAE,GAAA,OAAA5U,EAAAzF,MAAAiD,KAAAyC,YAAA,IA9EA+T,EAAA3O,KAAA,GAgFA0M,EAAApP,EAAAkS,IAAAf,GAAAgB,KAAA,WAEAf,EAAAP,UAAA,KAlFA,eAAAQ,EAAApB,OAAA,UAoFA,GApFA,yBAAAoB,EAAAzU,SAAAmU,EAAAlW,KAAA,wCAAAqV,IAAA,OAAAY,EAAAlZ,MAAAiD,KAAAyC,WAAA,OAAA4S,EAAA,GAsFAG,MAtFA,eAAA+B,EAAAhb,OAAAqY,EAAA,KAAArY,CAAAsY,mBAAAC,KAAA,SAAA0C,IAAA,IAAArB,EAAAxB,EAAAlO,EAAAgR,EAAAC,EAAAC,EAAA3X,KAAA,OAAA6U,mBAAAI,KAAA,SAAA2C,GAAA,eAAAA,EAAAzC,KAAAyC,EAAA/P,MAAA,UAuFAsO,EAAA,GAEAxB,EAAA3U,KAAAyS,KAAA/R,MAAAiU,cACAlO,EAAA,SAAAC,GAAA,OAAAA,EAAAC,OAAA,SAAAC,EAAAC,GAAA,OAAAD,EAAAnC,OAAAoC,IAAA,KACA4Q,EAAAhR,IAAAK,IAAA6N,EAAA5N,YACA,IAAA0Q,EAAArb,OA5FA,CAAAwb,EAAA/P,KAAA,eAAA+P,EAAAxC,OAAA,UA6FA,GA7FA,cA+FApV,KAAAyS,KAAA/R,MAAA8U,QAAA9Q,QAAA,SAAAC,GAEA,IAAA0R,EAAA,IAAAK,EAAA,MAAAC,QAAA,IACAN,EAAA7J,GACAmL,EAAA9D,UAAAlP,EAAA9B,WAAAiH,KAAAnF,EAAA9B,WAAA8N,QACA,GACA,CAAAiG,KAAA,CAAAiB,MAAA,IAAA5J,OAAA,EAAA+I,MAAA,EAAAc,WAAA,WAEAH,EAAAjE,UAAAE,KAAAiC,YAAA8B,EAAA9D,UAAAlP,EAAA9B,WAAAiH,KAAAnF,EAAA9B,WAAA8N,SACAgH,EAAA9D,UAAAlP,EAAA9B,WAAAiH,KAAAnF,EAAA9B,WAAA8N,QAAA,QAIAwF,EAAA7Z,KAAA,CAAA+Z,EAAA1R,IACAA,EAAA5H,UAGA2a,EAAAvB,EAAA/Q,IAAA,eAAApB,EAAAzH,OAAAqY,EAAA,KAAArY,CAAAsY,mBAAAC,KAAA,SAAAiD,EAAA1S,GAAA,OAAAwP,mBAAAI,KAAA,SAAA+C,GAAA,eAAAA,EAAA7C,KAAA6C,EAAAnQ,MAAA,cAAAmQ,EAAA5C,OAAA,SAAAuC,EAAAtD,gBAAAhP,EAAA,GAAAA,EAAA,qCAAA2S,EAAAjW,SAAAgW,MAAA,gBAAAE,GAAA,OAAAjU,EAAAjH,MAAAiD,KAAAyC,YAAA,IAhHAmV,EAAA/P,KAAA,GAkHA0M,EAAApP,EAAAkS,IAAAK,GAlHA,eAAAE,EAAAxC,OAAA,UAmHA,GAnHA,yBAAAwC,EAAA7V,SAAAyV,EAAAxX,SAAA,SAAAwV,IAAA,OAAA+B,EAAAxa,MAAAiD,KAAAyC,WAAA,OAAA+S,EAAA,GAqHA0C,OArHA,WAsHA,IAAAC,EAAAC,EAAA,UAAAC,UAAA,eAAAC,SAEA3E,EAAA,IAAAyE,EAAA,UAAAG,aACAJ,EAAA,MACAnY,KAAAtC,IAAA8a,OAAAC,MACAzY,KAAAtC,IAAA8a,OAAAE,QAEA1Y,KAAA0T,UAAAC,GAAAgF,SAAAhF,GACA,IAAAiF,EAAA,IAAAR,EAAA,UAAAG,aACAJ,EAAA,UACA,GACAnY,KAAAtC,IAAA8a,OAAAE,QAEA1Y,KAAA0T,UAAAC,GAAAgF,SAAAC,GACA,IAAAC,EAAA,IAAAT,EAAA,UAAAG,aACAJ,EAAA,SACAnY,KAAAtC,IAAA8a,OAAAC,MACA,IAEAzY,KAAA0T,UAAAC,GAAAgF,SAAAE,GACA,IAAAC,EAAA,IAAAV,EAAA,UAAAG,aACAJ,EAAA,SACAjF,GACAlT,KAAAtC,IAAA8a,OAAAE,QAEAI,EAAAjC,EAAA7W,KAAAyS,KAAA/R,MAAA8E,UAAAuD,WAAAmK,GACAlT,KAAA0T,UAAAC,GAAAgF,SAAAG,GACA,IAAAC,EAAA,IAAAX,EAAA,UAAAG,aACAJ,EAAA,SACAjF,GACAlT,KAAAtC,IAAA8a,OAAAE,QAEAK,EAAAC,EAAAhZ,KAAAtC,IAAA8a,OAAAC,MAAAvF,GACA6F,EAAAlC,EAAA7W,KAAAyS,KAAA/R,MAAA8E,UAAAuD,WAAAmK,GACAlT,KAAA0T,UAAAC,GAAAgF,SAAAI,GACA,IAAAE,EAAA,IAAAb,EAAA,UAAAD,EAAA,UACAc,EAAApC,EAAA7W,KAAAyS,KAAA/R,MAAA8E,UAAAuD,WAAAmK,GACAlT,KAAA0T,UAAAC,GAAAgF,SAAAM,GACA,IAAAC,EAAA,IAAAd,EAAA,UAAAD,EAAA,UACAe,EAAAF,EAAAhZ,KAAAtC,IAAA8a,OAAAC,MAAAvF,GACAgG,EAAArC,EAAA7W,KAAAyS,KAAA/R,MAAA8E,UAAAuD,WAAAmK,GACAlT,KAAA0T,UAAAC,GAAAgF,SAAAO,GACA,IAAAC,EAAA,IAAAf,EAAA,UAAAG,aACAJ,EAAA,SACAnY,KAAAyS,KAAA/R,MAAA8E,UAAAE,QAAAwN,GACAA,IAEAiG,EAAAH,EAAA9F,GACAiG,EAAAtC,EAAA7W,KAAAtC,IAAA8a,OAAAE,OAAAxF,GACAlT,KAAA0T,UAAAC,GAAAgF,SAAAQ,IAEAnD,SAzKA,WAyKA,IAAAoD,IAAA3W,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,KAAAA,UAAA,GAAAsF,GAAA,EAAAC,GAAA,EAAAC,OAAAvF,EAAA,IAEA,QAAAqN,EAAA1H,EAAAT,IAAA5H,KAAAyS,KAAA/R,SAAAqH,GAAAgI,EAAA1H,EAAAR,QAAAC,MAAAC,GAAA,OAAAZ,EAAA4I,EAAArR,MACA0a,GAAAjS,EAAAhI,SAAAka,GAAA9c,OAAAsN,QAEA7J,KAAA6T,UAAA1M,EAAA2C,KAAA3C,EAAAwJ,QAAA,IAAAyH,EAAA,WAEApY,KAAA0U,QAAAvN,IAAAwN,cAPA,MAAArM,GAAAN,GAAA,EAAAC,EAAAK,EAAA,YAAAP,GAAA,MAAAM,EAAAE,QAAAF,EAAAE,SAAA,WAAAP,EAAA,MAAAC,KAUAyM,QAnLA,SAmLAvN,GAAA,IAAAwN,EAAAlS,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,KACA6W,EAAAlB,EAAA,UAAAC,UAAA,iBAAAC,SACAiB,EAAAvZ,KAAA6T,UAAA1M,EAAA2C,KAAA3C,EAAAwJ,QACA,GAAA4I,EAAA,CAGA,OAAApS,EAAAhI,QACA,KAAAka,GAAA9c,OAAAiV,IACA+H,EAAAC,QAAAF,EAAA,MAAA7U,OAAAkQ,IACA,MACA,KAAA0E,GAAA9c,OAAAoV,MACA4H,EAAAC,QAAAF,EAAA,QAAA7U,OAAAkQ,IACA,MACA,KAAA0E,GAAA9c,OAAAmV,KACA6H,EAAAC,QAAAF,EAAA,OAAA7U,OAAAkQ,IACA,MACA,KAAA0E,GAAA9c,OAAAkV,OACA8H,EAAAC,QAAAF,EAAA,SAAA7U,OAAAkQ,IACA,MACA,KAAA0E,GAAA9c,OAAAqV,OACA2H,EAAAC,QAAAF,EAAA,SAAA7U,OAAAkQ,IACA,MACA,QACA,MAEA4E,EAAAP,GAAA7R,EAAAwJ,OAAA,GAAAuC,GACAqG,EAAA1C,GAAA7W,KAAAyS,KAAA/R,MAAA8E,UAAAC,KAAA0B,EAAA2C,IAAA,GAAAoJ,GACAlT,KAAA0T,UAAAE,KAAA+E,SAAAY,MAGAE,QAnQA,WAmQA,IAAAC,EAAA1Z,KACAA,KAAAyS,KAAAqD,GAAAtH,aAAAuH,WAAA/V,KAAAO,QACAP,KAAA6T,UAAA,IAAAxP,MAAArE,KAAAyS,KAAA/R,MAAA8E,UAAAC,MAAAkU,KAAA,MAAAvU,IAAA,sBAAAf,MAAAqV,EAAAjH,KAAA/R,MAAA8E,UAAAE,SAAAiU,KAAA,QACA3Z,KAAAtC,IAAA,IAAA0a,EAAA,gBACAK,OAAAzY,KAAAyS,KAAA/R,MAAA8E,UAAAE,QAAA,GAAAwN,GACAwF,QAAA1Y,KAAAyS,KAAA/R,MAAA8E,UAAAC,KAAA,GAAAyN,GACA0G,WAAA,EACAC,aAAA,EACAC,WAAA,IAEA9Z,KAAA0T,UAAAC,GAAA,IAAAyE,EAAA,aACApY,KAAA0T,UAAAE,KAAA,IAAAwE,EAAA,aAEApY,KAAAtC,IAAAqc,MAAApB,SAAA3Y,KAAA0T,UAAAC,IACA3T,KAAAtC,IAAAqc,MAAApB,SAAA3Y,KAAA0T,UAAAE,MACAwE,EAAA,UACA4B,IAAA,eACAA,IAAA,iBACAC,KAAAja,KAAAkY,QACA+B,KAAAja,KAAAgW,WAEAkE,QAxRA,WAyRAC,SAAAC,eAAA,aAAAC,YAAAra,KAAAtC,IAAA4c,OAEAC,UA3RA,WA4RAva,KAAAtC,IAAA8c,YCxS6UC,GAAA,gBCO7UC,GAAgBne,OAAAoe,GAAA,KAAApe,CACdke,GACAtY,EACAC,GACF,EACA,KACA,KACA,MAIewY,GAAAF,WCMfG,GAAA,CACAC,WAAA,CACAC,UAAAH,IAEA7G,MAAA,CACAxT,OAAAqM,QAEAhR,KAPA,WAQA,OACA0F,MAAA8R,KAGA4H,SAAA,CACAtZ,QADA,WAEA,OAAA1B,KAAAsB,QAAAgS,KAGAc,QAAA,CACAtS,KADA,WAEA9B,KAAAsB,MAAAgS,IAEAvR,KAJA,WAKA/B,KAAAsB,MAAA8R,IAEApR,KAPA,WAQAhC,KAAAsB,MAAAiS,IAEAtR,MAVA,WAWAjC,KAAAsB,MAAAkS,MCpD8UyH,GAAA,GCQ1UC,cAAY3e,OAAAoe,GAAA,KAAApe,CACd0e,GACA5Z,EACAa,GACF,EACA,KACA,WACA,OAIeiZ,GAAAD,WCDfE,GAAA,CACAN,WAAA,CACAO,WAAAF,IAEApH,MAAA,CACAxT,OAAAqM,QAEAhR,KAPA,WAQA,OACA0f,eAAA,IAGAN,SAAA,GAEA5G,QAAA,IChC8UmH,GAAA,GCQ1UC,cAAYjf,OAAAoe,GAAA,KAAApe,CACdgf,GACAta,EACAG,GACF,EACA,KACA,WACA,OAIeqa,GAAAD,+BChBTE,cAGJ,SAAAA,EAAYC,GAAapf,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAA0b,GAAAE,GAAAtU,IAAAtH,KAAA,CAAAiN,UAAA,EAAAvO,WAAA,IAAAmd,GAAAvU,IAAAtH,KAAA,CAAAiN,UAAA,EAAAvO,MAIf,SAAAod,GAAI,OAAI9M,KAAK4B,MAAMkL,EAAO,MAHlCvf,OAAAgO,EAAA,KAAAhO,CAAAyD,KAAA4b,GAAoBD,+KAgBdI,EAAgB,EAChBC,EAAgB,IAGhBC,EAAmB,GAErBC,EAAW,CAAE3f,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAA4b,IAAoBG,EACpBxf,OAAA4N,EAAA,KAAA5N,CAAAyD,KAAA4b,IAAoBI,GAE5BG,EAAc,cAAGA,GAAeF,oBAGvC,OAFMG,EAAOD,EAAcD,EAAS9f,gBAE9B8f,EAASE,aACfF,EAASE,GAAT7f,OAAA4N,EAAA,KAAA5N,CAAiByD,KAAjB6b,IAAAnf,KAAiBsD,KAAakc,EAASE,MAGnCF,EAASE,IAAS,wDAPqCD,6FAgB5CE,cAcnB,SAAAA,EAAA7Z,GAAqE,IAAvD8Z,EAAuD9Z,EAAvD8Z,oBAAqBC,EAAkC/Z,EAAlC+Z,WAAYC,EAAsBha,EAAtBga,mBAAsBjgB,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAAqc,GACnErc,KAAKsc,oBAAsBA,EAC3Btc,KAAKuc,WAAaA,EAClBvc,KAAKwc,mBAAqBA,kEAaO,IAAnBC,EAAmBzY,EAAnByY,MAAmBC,EAAA1Y,EAAZ2Y,YAAY,IAAAD,EAAL,EAAKA,EAC3BE,EAAe5c,KAAK6c,aAAa,CAAEF,KAAMA,IAC/C,MAAO,CACL3N,KAAK4B,MAAM6L,EAAQG,GACnBH,EAAQG,2CAee,IAAAE,EAAA5T,EAAZyT,YAAY,IAAAG,EAAL,EAAKA,EACzB,GAAwB,OAApB9c,KAAKuc,WAAqB,OAAOvc,KAAKsc,oBAE1C,IAAMS,EAAc,GAEpBJ,GAAQ3c,KAAKuc,WALY,IAAAhV,GAAA,EAAAC,GAAA,EAAAC,OAAA/E,EAAA,IAOzB,QAAAgF,EAAAC,EAAAC,IAAiB,IAAI8T,GAAsB1b,KAAKsc,wBAAhD/U,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAAsE,KAA7DuU,EAA6DpU,EAAAhJ,MACpE,GAAIie,EAAO,EAAG,MACdA,GAAQI,GATe,MAAAzU,GAAAd,GAAA,EAAAC,EAAAa,EAAA,YAAAf,GAAA,MAAAI,EAAAY,QAAAZ,EAAAY,SAAA,WAAAf,EAAA,MAAAC,GAYzB,OAAOqU,oDAY4B,IAAAkB,EAAA3T,EAAZsT,YAAY,IAAAK,EAAL,EAAKA,EACnC,OAAOhd,KAAKsc,oBAAsBtc,KAAK6c,aAAa,CAAEF,KAAMA,aCvHjD,SAASM,GAAMC,EAAQC,EAAKC,GACzC,OAAOpO,KAAKmO,IAAInO,KAAKoO,IAAIF,EAAQC,GAAMC,GCEzC,IAAMC,GAAY,CAChB,sBACA,aACA,qBACA,yBACA,SAGIC,GAAuB,CAC3B,EACA,EACA,EACA,EACA,GAGIC,GAAe,CAEnBjB,oBAAqB,GAAIC,WAAY,GAAIC,mBAAoB,EAE7DgB,uBAAwB,EAAGC,MAAO,GAK9BC,GAAiB,CACrB,UAAW,cAAe,cAGtBC,GAAoB,CACxBjY,QAAc,EACdoD,YAAa,GACbC,WAAc,GAGV6U,GAA4B,CAChC,EACA,EACA,GAGmBC,eAqMnB,SAAAA,IAA0D,IAAAtb,EAAAC,EAAAC,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAAxC0P,EAA4C3P,EAA5C2P,KAA4C2L,EAAAtb,EAAtCgD,iBAAsC,IAAAsY,EAA1BH,GAA0BG,EAAAvhB,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAA6d,GACxDtb,EAAAhG,OAAAgI,EAAA,KAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,KAAAjI,CAAAshB,GAAAnhB,KAAAsD,KAAM,CAAEmS,KAAM,IAAI0L,EAAIxB,KAAKlK,GAAO3M,UAAWA,KAE7C,IAAIoF,EAAOrO,OAAAwhB,GAAA,KAAAxhB,CAAAgG,GAQXA,EAAK7B,MAAM+V,UAAY,WACrB,OAAO1I,GAAMnJ,UAAUwR,kBAAkBpW,OAO3CuC,EAAK7B,MAAMiU,YAAc,WACvB,OAAO5G,GAAMnJ,UAAUoZ,gBAAgBhe,KAAM,CAC3C6E,cAAe,CAAC,MAAO,OAAQ,QAAS,SAAU,UAAUO,IAAI,SAAApG,GAAG,OAAI+O,GAAMxR,OAAOyC,KACpF+F,cAAe6F,EAAKuH,KAAKqK,sBAW7Bja,EAAK7B,MAAM8U,MAAQ,WAA2C,IAAlCb,EAAkClS,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,GAApBzC,KAAK2U,cAC7C,OAAO5G,GAAMnJ,UAAUqZ,aAAalQ,GAAMnJ,UAAUsZ,qBAAqBvJ,KAIzE,IAAIwJ,EAAQ5b,EAAK7B,MAAMyd,MAtC+B,OAyCtD5b,EAAK7B,MAAMyd,MAAQ,WACjB,IAAInN,EAASmN,EAAMphB,MAAMiD,MAKzB,OAJAgR,EAAOyF,UAAYzW,KAAKyW,UACxBzF,EAAO2D,YAAc3U,KAAK2U,YAC1B3D,EAAOwE,MAAQxV,KAAKwV,MAEbxE,GA/C6CzO,gCArM3B2P,mBAAZ2L,aACF,kBADEA,+HAUEpL,EAAMtG,GAgBvB,OAdA+F,GAAKlE,WAAWoQ,kBAAkBjS,EAAS,CACzCiG,aAAY,GAAA3N,OAAAlI,OAAAgJ,EAAA,KAAAhJ,CACP8gB,GAAUjY,IAAI,SAAA4N,GAAC,OAAIP,EAAKN,KAAKa,MADtBzW,OAAAgJ,EAAA,KAAAhJ,CAEPmhB,GAAetY,IAAI,SAAA4N,GAAC,OAAIP,EAAK/R,MAAM8E,UAAUwN,OAElDX,cAAa,GAAA5N,OAAAlI,OAAAgJ,EAAA,KAAAhJ,CACR8gB,GAAUjY,IAAI,SAAA4N,GAAC,OAAIuK,GAAavK,MADxBzW,OAAAgJ,EAAA,KAAAhJ,CAERmhB,GAAetY,IAAI,SAAA4N,GAAC,OAAI2K,GAAkB3K,OAE/CV,eAAc,GAAA7N,OAAM6Y,GAAyBM,MAG/C7P,GAAMC,WAAW4E,YAAYH,EAAK/R,MAAOyL,GAElCA,2BA1BQ0R,mIAkCIpR,GACnB,IAAI4R,EAASnM,GAAK1D,aAAa8P,oBAAoB7R,EAAS,CAC1D4F,cAAa,GAAA5N,OAAAlI,OAAAgJ,EAAA,KAAAhJ,CACR8gB,GAAUjY,IAAI,SAAA4N,GAAC,OAAIuK,GAAavK,MADxBzW,OAAAgJ,EAAA,KAAAhJ,CAERmhB,GAAetY,IAAI,SAAA4N,GAAC,OAAI2K,GAAkB3K,OAE/CV,eAAc,GAAA7N,OAAM6Y,GAAyBM,MANnBW,EASJrM,GAAK1D,aAAagQ,cAAc,CACtD1L,MAAOuL,EACPtL,WAAY,CAACsK,GAAWK,MAXEe,EAAAliB,OAAA0O,EAAA,KAAA1O,CAAAgiB,EAAA,GASvBpM,EATuBsM,EAAA,GASjBjZ,EATiBiZ,EAAA,GAcxBhM,EAAO,IAAIoL,GAAI,CAAE1L,KAAMA,EAAM3M,UAAWA,IAG5C,OAFAuI,GAAMS,aAAamB,cAAc8C,EAAK/R,MAAO+L,GAEtCgG,2BAnDQoL,sBAiEjB,SAAAa,IAAiC,IAAAnI,EAArBpE,EAAqB1P,UAAArG,OAAA,QAAAsG,IAAAD,UAAA,GAAAA,UAAA,GAAd8a,GAAc,OAAAhhB,OAAA6G,EAAA,KAAA7G,CAAAyD,KAAA0e,GAC/BnI,EAAAha,OAAAgI,EAAA,KAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,KAAAjI,CAAAmiB,GAAAhiB,KAAAsD,KAAMmS,IACNoE,EAAKiH,uBAAyBrL,EAAKqL,uBACnCjH,EAAKkH,MAAQtL,EAAKsL,MAHalH,gFAYtBoI,GACT,OAAOA,EAAQ,EAAkB,GAAbA,EAAQ,GAAuB,IAAbA,EAAQ,sCAgBrCC,GACT,OAAQ5P,KAAK6P,IAAID,IACf,KAAK,EAAG,KAAK,EAAG,OAAO,EACvB,KAAK,EAAW,OAAO,EACvB,QAAgB,OAAO,EAAI5e,KAAK8e,WAAWF,EAAa,uCAqBjDG,GACT,IAAIC,EAAkBD,EAAY/P,KAAKmO,IAAInd,KAAKwc,mBAAoB,GACpE,OAAuB,GAAnBwC,EAA6B,EACxBA,GAAmB,EAAU,GAC1BA,EAAkB,yCAUjBra,GAEb,GAAIA,EAAKnB,MAAQD,EAAKG,KAAKC,UAAW,OAAO,EAE7C,OAAQgB,EAAK9B,WAAW1D,QACtB,KAAK4O,GAAMxR,OAAOiV,IAClB,KAAKzD,GAAMxR,OAAOkV,OAClB,KAAK1D,GAAMxR,OAAOmV,KAClB,KAAK3D,GAAMxR,OAAOoV,MAClB,KAAK5D,GAAMxR,OAAOqV,OAChB,OAAO,GAET,KAAK7D,GAAMxR,OAAOyV,cAChB,GAAIrN,EAAKf,YAAcmK,GAAMxR,OAAOsN,MAClC,OAAqC,EAA9B7J,KAAKwd,uBAIhB,KAAKzP,GAAMxR,OAAOwV,SAChB,OAAO/R,KAAKwd,0DA4B+B,IAAA7F,EAAA3X,KAAxC2e,EAAwC3a,EAAxC2a,MAAOM,EAAiCjb,EAAjCib,cAAeC,EAAkBlb,EAAlBkb,eACvBN,EAAa9X,IAAWmY,EAAclY,UACtBJ,OAAO,SAACuI,EAAOyF,GAAR,OAAwBzF,EAAQF,KAAKmO,IAAI,EAAGxI,EAAYvY,SAAS,GACxF+iB,EAAarY,IAAWmY,EAAclY,UACtBJ,OAAO,SAACyY,EAAOzK,GAAR,OAAwByK,EAAM3a,OAAOkQ,EAAYvP,IAAI,SAAAia,GAAU,OAAIA,EAAWjjB,WAAU,IAErH,MAAO,CACE4D,KAAKyd,MAAQyB,EAAevY,OAAO,SAAC2Y,EAAK3a,GAAN,OAAe2a,EAAM3H,EAAK4H,eAAe5a,IAAO,GAEnFsY,GAAMjd,KAAK8e,WAAWF,GAChB5e,KAAKwf,WAAWb,GAChBQ,EAAWxY,OAAO,SAAC2Y,EAAKP,GAAN,OAAoBO,EAAM3H,EAAK8H,WAAWV,IAAY,GACxE,EAAG,aAzIM1C,KAmM9BnK,GAAKQ,MAAMmL,GAAI6B,SAAW7B,GCtQ1B,IAAA8B,GAAA,CACA7E,WAAA,CACA8E,WAAAnE,IAEA7f,KAJA,WAKA,IAAA6W,EAAA,IAAAoN,GACApN,EAAAN,KAAAoK,WAAA,KACA,IAAA7b,EAAA+R,EAAA/R,MAEAiF,EAAA,wCACA,SACAma,EAAA,2BACA,0BACA,0BACA,0BACA,0BACA,2BAEAC,EAAA,EAdAxY,GAAA,EAAAC,GAAA,EAAAC,OAAA/E,EAAA,IAeA,QAAAgF,EAAAC,EAAAC,IAAAlH,KAAA6G,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,OAAAJ,EAAAO,EAAAhJ,MACAyI,EAAAhI,OAAAka,GAAA9c,OAAAoJ,EAAAma,EAAAC,KACAA,KAjBA,MAAAzX,GAAAd,GAAA,EAAAC,EAAAa,EAAA,YAAAf,GAAA,MAAAI,EAAAY,QAAAZ,EAAAY,SAAA,WAAAf,EAAA,MAAAC,GA0BA,IANA,IAAAlH,EAAAuV,GAAA9H,WAAA4E,YAAAH,GAAAI,WACAlS,EAAAmV,GAAAtH,aAAAmB,cAAA,IAAAqQ,GAAAzf,IACA0f,EAAAvf,EAAAyd,QAEArd,EAAA,EAEA6d,EAAA,OAAAjc,IAAAiC,KAAAvI,OAAA,IAAAuiB,EAAA,CAEAje,EAAA+V,YAAA1Z,QAEA,IAAA4X,EAAAjU,EAAAiU,cACAhQ,EAAAjE,EAAA8U,MAAAb,GALAuL,EAOAzN,EAAAN,KAAArR,OAAA,CACA6d,QACAM,cAAAtK,EACAuK,eAAAva,IAVAwb,EAAA5jB,OAAA0O,EAAA,KAAA1O,CAAA2jB,EAAA,GAOAE,EAPAD,EAAA,GAOAE,EAPAF,EAAA,GAaArf,GAAAsf,EAAAC,EAEA1b,EAAA5H,QAGA,OACA2D,MAAA2Y,GAAArL,WAAAsS,WAAAL,GACA1f,SACAI,QAAA0Y,GAAArL,WAAAsS,WAAA3f,EAAAD,OACAG,MAAAwY,GAAArL,WAAAsS,WAAA5f,GACAI,SACAC,WAAA0R,EAAAN,KAAAoO,uBAAA,CAAA5D,KAAA,MACA/b,aAAA,OAAAD,EAAAwR,KAAAoK,cC1FwUiE,GAAA,GCQpUC,cAAYlkB,OAAAoe,GAAA,KAAApe,CACdikB,GACA1gB,EACAkB,GACF,EACA,KACA,KACA,OAIe0f,GAAAD,WChBfE,OAAIC,OAAOC,eAAgB,EAE3B,IAAIF,OAAI,CACNG,OAAQ,SAAAC,GAAC,OAAIA,EAAEL,OACdM,OAAO,mDCPV,IAAAC,EAAA1jB,EAAA,QAAA2jB,EAAA3jB,EAAA2B,EAAA+hB,GAA+bC,EAAG","file":"js/app.4bf96a79.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulatorPlayer.vue?vue&type=style&index=0&id=7758b275&lang=scss&scoped=true&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulatorPlayer.vue?vue&type=style&index=0&id=7758b275&lang=scss&scoped=true&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulatorEditor.vue?vue&type=style&index=0&id=aba63f82&lang=scss&scoped=true&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulatorEditor.vue?vue&type=style&index=0&id=aba63f82&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"simulator\"}},[_c('PuyoEditor',{attrs:{\"base64\":_vm.base64}}),_c('pre',[_vm._v(\"original field:\\n\"+_vm._s(_vm.field)+\"\\n\\nbase64 field:\\n\"+_vm._s(_vm.base64)+\"\\n\\ndecoded field:\\n\"+_vm._s(_vm.decoded)+\"\\n\\ndecoded field margin time setting is null:\\n\"+_vm._s(_vm.noMarginTime)+\"\\n\\nfinal field:\\n\"+_vm._s(_vm.final)+\"\\n\\npoints:\\n\"+_vm._s(_vm.points)+\"\\n\\nwith margin time = null, nuisance multiplier after 500 sec:\\n\"+_vm._s(_vm.multiplier)+\"\\n    \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"editor\"},[_c('PuyoPlayer',{attrs:{\"base64\":_vm.base64}}),_vm._m(0)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"editor__control\"},[_c('ul',{staticClass:\"editor__color\"},[_c('li',{staticClass:\"editor__color--red\"}),_c('li',{staticClass:\"editor__color--green\"}),_c('li',{staticClass:\"editor__color--blue\"}),_c('li',{staticClass:\"editor__color--yellow\"}),_c('li',{staticClass:\"editor__color--purple\"})])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"player\"},[_c('PuyoField',{attrs:{\"base64\":_vm.base64,\"state\":_vm.state},on:{\"update:state\":function($event){_vm.state=$event}}}),_c('ul',{staticClass:\"player__control\"},[(!_vm.playing)?_c('li',{on:{\"click\":function($event){$event.stopPropagation();return _vm.play($event)}}},[_c('i',{staticClass:\"fas fa-play\"})]):_vm._e(),(_vm.playing)?_c('li',{on:{\"click\":function($event){$event.stopPropagation();return _vm.stop($event)}}},[_c('i',{staticClass:\"fas fa-pause\"})]):_vm._e(),_c('li',{on:{\"click\":function($event){$event.stopPropagation();return _vm.step($event)}}},[_c('i',{staticClass:\"fas fa-step-forward\"})]),_c('li',{on:{\"click\":function($event){$event.stopPropagation();return _vm.reset($event)}}},[_c('i',{staticClass:\"fas fa-fast-backward\"})])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"puyostage\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const FieldObject = {};\nexport default FieldObject;\n\nObject.defineProperty(FieldObject, 'Properties', {\n  value: class {\n    constructor({\n      /**\n       * Function that, given positional, determines what this object should \n       * become when cleared. Default is that it becomes itself; logically it\n       * means the object won't be cleared.\n       */\n      // eslint-disable-next-line\n      cleared         = (positional) => this,\n      /** \n       * Function that, given positional, determines what this object should \n       * become when an adjacent object is cleared. Default is that it becomes\n       * itself; logically it means the object won't be affected by adjacent\n       * clearance.\n       *\n       * Note that it is often a bad idea to have clearable objects be affected\n       * by adjacent clearance, as the final result will have to depend on\n       * clearance order. This behavior is currently undefined as we don't\n       * have a use case for it yet.\n       */\n      // eslint-disable-next-line\n      adjacentCleared = (positional) => this,\n      /** Determines whether this object should be immune to gravity. */\n      gravityImmune   = false,\n      /** One-character string symbol to represent this object when serializing Fields. Must be unique. */\n      symbol          = '?',\n    } = {}) {\n      this.cleared = cleared;\n      this.adjacentCleared = adjacentCleared;\n      this.gravityImmune = gravityImmune;\n      this.symbol = symbol;\n      Object.freeze(this);\n    }\n  }\n});\n\n// Special EMPTY object, must exist.\nObject.defineProperty(FieldObject, 'EMPTY', {\n  value: new FieldObject.Properties({ gravityImmune: true, symbol: ' ' }),\n  enumerable: true,\n});\n","export default class Diff {\n  /**\n   * A simple subclass of Array that supplies an apply method, that calls\n   * apply on each Array element, which is a Diff object.\n   *\n   * Functions that return a collection of Diff objects should return an\n   * instance of this Collection class instead of a native Array.\n   */\n  static Collection = class extends Array {\n    constructor(...args) { super(...args); }\n    apply() { this.forEach(diff => diff.apply()); }\n  };\n\n  static Type = {\n    /**\n     * Indicates that objects in two Positional exchanges positions.\n     *\n     * $positional and $argument to the constructor should be two different\n     * positionals to be exchanged, belonging to the same field. The diff is\n     * equivalent if $positional and $argument arguments are swapped.\n     *\n     * The exchanging positionals can be accessed through this.positional and\n     * this.otherPositional.\n     */\n    EXCHANGE: {}, \n    /**\n     * Indicates the object in a Positional is transforming to another kind of\n     * object. $argument passed to the constructor is a value in Field.Object\n     * to transform to.\n     *\n     * The $argument can later be accessed through this.newObject.\n     */\n    TRANSFORM: {},\n  }\n\n  constructor({ type, positional, argument }) {\n    this.positional = positional;\n    switch (this.type = type) {\n      case Diff.Type.TRANSFORM: this.newObject = argument;       break;\n      case Diff.Type.EXCHANGE:  this.otherPositional = argument; break;\n    }\n    Object.freeze(this);\n  }\n\n  get valid() {\n    if (!this.positional.valid) return false;\n\n    switch (this.type) {\n      case Diff.Type.TRANSFORM: return true;\n      case Diff.Type.EXCHANGE:  return this.positional.field == this.otherPositional.field;\n      default: return false;\n    }\n  }\n\n  apply() {\n    if (!this.valid) return;\n\n    switch (this.type) {\n      case Diff.Type.TRANSFORM: this.positional.object = this.newObject; break;\n      case Diff.Type.EXCHANGE: \n        [ this.positional.object, this.otherPositional.object ] = [ this.otherPositional.object, this.positional.object ];\n        break;\n    }\n  }\n}\n","import Diff from './Diff.js';\nimport FieldObject from './FieldObject.js';\n\nexport default class Algorithm {\n  /**\n   * Find connected target objects in the given field.\n   *\n   * @param {Field} field - the field to find connections in.\n   * @param {[ Field.Object, ... ]} targetObjects - Array of kinds of Field objects to \n   *                                                find connections for.\n   * @param {Number} minConnected = 1 - the minimum size of connection to include in\n   *                                    returned result.\n   * @param {Boolean} onlyVisible = true - if true, does not return any hidden positional.\n   *\n   * @return {Map(Field.Object => [ [ Field.Positional... ]... ], ...)} \n   *         A Map from a Field.Object to an Array of subarrays, each of which contains\n   *         positions that are connected. No one position can appear in two different\n   *         subarrays.\n   */\n  static findConnections(field, { targetObjects, minConnection = 1, onlyVisible = true }) {\n    let result = new Map(targetObjects.map(obj => [ obj, [] ]));\n  \n    // keeps track of all positions to be visited\n    new Set([...Array(field.dimension.rows * field.dimension.columns).keys()])\n      // using \"forEach\" like \"while set not empty\",\n      // i.e. \"while there are more positions to visit\"\n      .forEach(function (primitivePosition, _, toVisit) {\n        const position = new field.Positional({ primitive: primitivePosition });\n        const targetObject = position.object;\n  \n        if (// position is in one of the hidden rows, and user says find only visible ones\n            (onlyVisible && position.hidden) || \n            // object at position is not one of targetObjects\n            !result.has(targetObject)\n        ) {\n          // mark here as visited, and do nothing with it\n          // NOTE: in the other case, here is marked as visited in dfs\n          toVisit.delete(position.primitive);\n          return;\n        }\n  \n        let connected = [];\n  \n        // use dfs to find all connected targetObject\n        (function dfs(position) {\n          // this position has been visited before, ignoring\n          if (!toVisit.has(position.primitive)) return;\n          // this position does not contain targetObject, ignoring\n          if (targetObject !== position.object) return;\n  \n          // mark position as visited\n          toVisit.delete(position.primitive);\n  \n          // this position contains the target field object,\n          // include it in the connected result\n          connected.push(position);\n  \n          // look in adjacent positions, include them in the connected array as well if \n          // they contain the same field object\n          position.adjacent.forEach(dfs);\n        })(position);\n  \n        if (connected.length >= minConnection) {\n          result.get(targetObject).push(connected);\n        }\n      });\n  \n    return result;\n  }\n  \n  /**\n   * A convenience flatten function to flatten the connections map returned by\n   * Field.Algorithm.findConnections, such that the array elements are Field.\n   * Positional objects that can be the argument to Field.Algorithm.clearingDiff.\n   *\n   * @param {Map(Field.Object => [ [ Field.Positional... ]... ], ...)} map -\n   *        A connection map returned from Field.Algorithm.findConnections.\n   * @return {Array(Positional, ...)}\n   */\n  static flattenConnectionMap(map) {\n    let flatten = arrs => arrs.reduce((acc, arr) => acc.concat(arr), []);\n    \n    return flatten(flatten(Array.from(map.values())));\n  }\n  /**\n   * Computes the diffs such that, if applied, the given positionals are\n   * cleared from the field. \n   *\n   * If the clearance does not trigger any change to an object, e.g. if\n   * the object clears and transforms back to itself, then the result is\n   * not included in the resultant Diff array. It also finds diffs\n   * triggered by adjacent clearance, so the resultant array may include\n   * positionals that are not one of the ones passed in.\n   *\n   * This does not mutate the field; One must call Diff.prototype.apply\n   * to apply the changes.\n   *\n   * All Diff objects are of type Diff.Type.TRANSFORM.\n   *\n   * @param {[Field.Positional, ...]} - an array of positionals pointing to \n   *                                    objects that are about to be cleared.\n   * @return {Diff.Collection([Diff, ...])} A Collection of Diff objects to clear.\n   */\n  static clearingDiff(positionals) {\n    let diffs = new Map;\n    \n    /**\n     * Helper to push a result into the diffs Map. Does not push if object\n     * didn't actually change. \n     */\n    const pushDiff = function(pos, transform = obj => obj.cleared(pos)) {\n      if (!pos.valid) return;\n\n      // if some transformation has already happened on this position before,\n      // we should start from what it has transformed to, not from pos.object\n      let intermediateObject = diffs.has(pos.primitive) ? diffs.get(pos.primitive).newObject\n                                                        : pos.object;\n      let newObject = transform(intermediateObject);\n      if (intermediateObject === newObject) return;\n\n      diffs.set(pos.primitive, new Diff({\n        type: Diff.Type.TRANSFORM,\n        positional: pos,\n        argument: newObject\n      }));\n    };\n\n    for (const pos of positionals) {\n      pushDiff(pos);\n      for (const adj of pos.adjacent) {\n        pushDiff(adj, obj => obj.adjacentCleared(adj));\n      }\n    }\n\n    return new Diff.Collection(...diffs.values());\n  }\n\n  /**\n   * Computes the difference between field1 and field2. field1 and field2 must\n   * have the same dimensions.\n   *\n   * @param {Field} field1 - the \"from\" field.\n   * @param {Field} field2 - the \"to\" field.\n   *\n   * @return {Diff.Collection([Diff, ...])} \n   *         - A Collection of Diff objects that apply to field1, such that\n   *           field1 becomes field2. All Diffs objects are of type TRANSFORM;\n   *         - undefined if field1 and field2 don't have the same dimensions.\n   */\n  static diff(field1, field2) {\n    let [dimen1, dimen2] = [field1.dimension, field2.dimension];\n\n    // field1 and field2 must have the same dimensions\n    if (dimen1.columns     !== dimen2.columns     ||\n        dimen1.visibleRows !== dimen2.visibleRows ||\n        dimen1.hiddenRows  !== dimen2.hiddenRows    ) return undefined;\n\n    let result = new Diff.Collection;\n    for (let [pos1, pos2] = [new field1.Positional, new field2.Positional];\n         pos1.valid;\n         [pos1, pos2] = [pos1.right.bottom, pos2.right.bottom]\n    ) {\n      for (; pos1.valid; [pos1, pos2] = [pos1.above, pos2.above]) {\n        if (pos1.object !== pos2.object) {\n          result.push(new Diff({\n            type: Diff.Type.TRANSFORM,\n            positional: pos1,\n            argument: pos2.object\n          }));\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Computes the diffs of one field such that, if applied, causes gravity-\n   * vulnerable objects to fall. This does not mutate the given field; one\n   * must call Diff.prototype.apply to mutate the field.\n   *\n   * Diff objects in the resultant array are of type Diff.Type.EXCHANGE.\n   *\n   * @param {Field} field - the field to apply gravity to.\n   * @return {Diff.Collection([Diff, ...])} A Collection of Diff objects.\n   */\n  static gravitationalDiff(field) {\n    let result = new Diff.Collection;\n\n    // since we are not modifying field in place, we need to keep track of\n    // changes made so far\n    let aux = new Map;\n\n    // 2-pointer comparison approach:\n    // pointer 1(p1) iterates through whole column, \n    // pointer 2(p2) points to either an EMPTY slot or the same slot as p1;\n    //\n    // for each column, p1 inspects every slot from bottom up, \n    //                  p2 has to exchange with p1 if p1 contains an object, \n    //                  p2 then changes to point at one slot up\n    for (let [p1, p2] = [new field.Positional, new field.Positional]; \n         p1.valid; \n         [p1, p2] = [p1.right.bottom, p2.right.bottom]) {\n      for (; p1.valid; p1 = p1.above) {\n        const p1Obj = aux.get(p1.primitive) || p1.object;\n        const p2Obj = aux.get(p2.primitive) || p2.object;\n\n        if (p1Obj === FieldObject.EMPTY) continue;\n\n        // for gravity-immune objects, nothing should fall below them,\n        // equate p2 and p1, as if p1 and p2 were the bottom of the field\n        if (p1Obj.gravityImmune) p2.row = p1.row;\n\n        if (p1Obj !== p2Obj) {\n          // objects in p1 and p2 are different and need to exchange,\n          result.push(new Diff({\n            type: Diff.Type.EXCHANGE,\n            positional: p1,\n            argument: p2\n          }));\n\n          // log this change in auxilliary map\n          aux.set(p1.primitive, p2Obj);\n          aux.set(p2.primitive, p1Obj);\n        }\n\n        // move p2 up one slot\n        p2 = p2.above;\n      }\n    }\n\n    return result;\n  }\n}\n","const CHAR_BIT = 8;\n\nconst Base64 = require('base64-js');\n\nexport default class BitStreamWriter {\n  /** Stores an incomplete byte. */\n  #buffer = 0;\n  /** Stores the number of bits already written to #buffer. */\n  #bitsInBuffer = 0;\n\n  /** Stores flushed bytes. */\n  #stream = [];\n\n  #flush = function() {\n    // no bit in buffer; nothing to flush\n    if (this.#bitsInBuffer === 0) return;\n\n    this.#stream.push(this.#buffer << (CHAR_BIT - this.#bitsInBuffer));\n    this.#buffer = this.#bitsInBuffer = 0;\n  };\n\n  /**\n   * Writes data to this stream.\n   * @param {Number} value - data to be written.\n   * @param {Number} writeBitCount - number of least significant bits from value\n   *                                 to be written to this stream.\n   */\n  write({ value, writeBitCount }) {\n    if (writeBitCount <= 0) return;\n\n    // write leftmost bit to buffer,\n    // e.g. with value=0b100, writeBitCount=3, we write 0b1 into buffer,\n    // by right-shifting value by 2 so that 0b1 is the rightmost bit,\n    // then we can easily AND it with 1 to extract just that bit\n    this.#buffer = (this.#buffer << 1) | ((value >> (writeBitCount - 1)) & 1);\n\n    // buffer is full, concat to stream\n    if (++this.#bitsInBuffer % CHAR_BIT === 0) this.#flush();\n\n    // recurse if we need to write more than 1 bit\n    this.write({ value: value, writeBitCount: writeBitCount - 1 });\n  }\n\n  /**\n   * Writes data to this stream as a variable length quantity.\n   *\n   * A variable length quantity may require several partitions to fully\n   * store the value, each partition having partitionBitCount + 1 many bits. If\n   * the quantity requires more than one partition, the most significant bit of\n   * the partition is 1; 0 otherwise.\n   *\n   * For example, if value is 0b10001, and partitionBitCount is 5:\n   * Since 5 bits can fully store this binary number, the result is 0b 010001.\n   *\n   * For the same value, if partitionBitCount is 2:\n   * Since 2 bits can NOT fully store this binary number, it requires more than\n   * 1 partition; in fact, it requires 3 partitions, and will be stored as\n   * 0b 101 100 001.\n   *\n   * This is particularly useful if a value usually doesn't exceed only a few\n   * bits, in which case storing the value in a fixed length fashion may waste\n   * a lot of bits.\n   *\n   * @param {Number} value - the value to write as a varlen quantity.\n   * @param {Number} writeBitCount - the maximum number of bits in value to write.\n   * @param {Number} partitionBitCount - the number of bits each partition has.\n   */\n  writeVariableLength({ value, writeBitCount, partitionBitCount }) {\n    let self = this;\n    let writeNext = function(v, c) {\n      if (c <= partitionBitCount) {\n        return [v >>> partitionBitCount, \n                () => {\n                  self.write({ value: 0, writeBitCount: 1 });\n                  self.write({ value: v, writeBitCount: partitionBitCount });\n                }];\n      } else {\n        let [newV, f] = writeNext(v, c - partitionBitCount);\n        return [newV >>> partitionBitCount, \n                () => {\n                  if (newV !== 0) {\n                    self.write({ value: 1, writeBitCount: 1 });\n                    self.write({ value: newV, writeBitCount: partitionBitCount });\n                  }\n                  f();\n                }];\n      }\n    };\n\n    let [, w] = writeNext(value, writeBitCount);\n    w();\n  }\n\n  /**\n   * Converts written stream to Base64 encoding. Finalizes this BitStreamWriter.\n   * @return {String} Base64 encoded data written to this stream.\n   */\n  finalize() {\n    this.#flush();\n    Object.freeze(this);\n    return Base64.fromByteArray(this.#stream);\n  }\n}\n\n","import TinyQueue from 'tinyqueue';\n\nclass PrefixTreeNode {\n  /**\n   * Comparator to compare two PrefixTreeNodes.\n   *\n   * TinyQueue is a min-queue, so smaller elements have higher priority and\n   * appear first. We want nodes with lower frequency to appear first. When\n   * two nodes have the same frequency, use the symbol to break ties, but\n   * the eventual order doesn't really matter when two nodes have the same\n   * frequency.\n   */\n  static comparator(node1, node2) {\n    return node1.frequency < node2.frequency ? -1 :\n           node1.frequency > node2.frequency ?  1 :\n              node1.symbol < node2.symbol    ? -1 :\n              node1.symbol > node2.symbol    ?  1 :\n                                                0;\n  }\n  \n  /**\n   * Constructs a non-modifiable PrefixTreeNode.\n   *\n   * @param {[1-char String, Number]} entry - \n   *        Symbol and frequency this node represents. Symbol must be ASCII. \n   *        This node will be a leaf node.\n   *\n   * @param {[PrefixTreeNode, PrefixTreeNode]} branches - \n   *        Supersedes entry if provided. This node will be a branch node with \n   *        left and right assigned to the given nodes.\n   */\n  constructor({ entry: [symbol, frequency] = [], branches: [left, right] = [] }) {\n    if (!left || !right) {\n      this.symbol = symbol;\n      this.frequency = frequency;\n      this.left = null;\n      this.right = null;\n    } else {\n      this.symbol = left.symbol + right.symbol;\n      this.frequency = left.frequency + right.frequency;\n      this.left = left;\n      this.right = right;\n    }\n\n    Object.freeze(this);\n  }\n\n  /** @return true if this node is a leaf node. */\n  isLeaf() { return this.left === null && this.right === null; }\n\n  static BRANCH = 0;\n  static LEAF = 1;\n\n  /**\n   * Generates a PrefixCode subtree given a BitStreamReader.\n   */\n  static from(istream) {\n    if (istream.read(1) === this.BRANCH) {\n      return new this({ branches: [this.from(istream), this.from(istream)] });\n    } else {\n      // when reconstructing the tree from istream, frequency doesn't matter anymore\n      return new this({ entry: [String.fromCharCode(istream.read(8)), 0] });\n    }\n  }\n\n  /**\n   * Outputs this node, and its descendants, to the given BitStreamWriter.\n   */\n  to(ostream) {\n    if (this.isLeaf()) {\n      ostream.write({ value: PrefixTreeNode.LEAF, writeBitCount: 1 });\n      ostream.write({ value: this.symbol.charCodeAt(0), writeBitCount: 8 });\n    } else {\n      ostream.write({ value: PrefixTreeNode.BRANCH, writeBitCount: 1 });\n      this.left.to(ostream);\n      this.right.to(ostream);\n    }\n  }\n}\n\n/**\n * Generates a prefix code encoding using Huffman encoding algorithm.\n */\nexport default class PrefixTree {\n  #root;\n\n  /**\n   * Constructs a PrefixTree given a BitStreamReader.\n   *\n   * The BitStreamReader should start with whatever is outputted from this.prototype.to.\n   */\n  static from(istream) {\n    let result = new this({});\n    result.#root = PrefixTreeNode.from(istream);\n    return result;\n  }\n\n  /** Outputs the structure of this tree to the given BitStreamWriter. */\n  to(ostream) { this.#root.to(ostream); }\n\n  /**\n   * Constructs a PrefixTree given frequencies.\n   *\n   * @param { {`${symbol}` : Number} } frequencies\n   *        An object mapping from the symbol character to its frequencies.\n   */ \n  constructor(frequencies) {\n    let queue = new TinyQueue(Object.entries(frequencies).map(entry => new PrefixTreeNode({ entry: entry })), \n                              PrefixTreeNode.comparator);\n    while (queue.length > 1) {\n      queue.push(new PrefixTreeNode({ branches: [queue.pop(), queue.pop()] }));\n    }\n\n    this.#root = queue.pop();\n  }\n \n  static LEFT = 0;\n  static RIGHT = 1;\n\n  /** @return the next symbol from the given BitStreamReader. */\n  symbolFromStream(istream) {\n    for (var node = this.#root; \n         !node.isLeaf(); \n         node = istream.read(1) === PrefixTree.LEFT ? node.left : node.right);\n    return node.symbol;\n  }\n\n  /**\n   * Returns a mapping from symbol to the writePrefix function.\n   *\n   * The writePrefix function accepts a BitStreamWriter and writes the \n   * necessary bits into the stream for the symbol.\n   *\n   * Outside clients should not pass any arguments to this method.\n   * \n   * @return { {`${symbol}` : function(ostream) {...} }\n   */\n  encoding(map = {}, node = this.#root, writePrefix = () => undefined) {\n    if (node.isLeaf()) {\n      map[node.symbol] = writePrefix;\n    } else {\n      // helper function to create a function that writes the given bit\n      // to ostream after writing the previous encoding, i.e. prefix.\n      const appendBit = bit => function(ostream) {\n        writePrefix(ostream);\n        ostream.write({ value: bit, writeBitCount: 1 });\n      };\n      this.encoding(map, node.left, appendBit(PrefixTree.LEFT));\n      this.encoding(map, node.right, appendBit(PrefixTree.RIGHT));\n    }\n\n    return map;\n  }\n}\n","import BitStreamWriter from '../Tools/BitStreamWriter.js';\nimport PrefixTree from '../Tools/PrefixTree.js';\n\nexport default function(Field) {\n\n  let Serializer = {};\n  Serializer.toAsciiArt = function(field) {\n    // initially contains the bottom row without objects\n    let rows = [ '++' + '='.repeat(field.dimension.columns * 2 + 1) + '++' ];\n    \n    for (let pos = new field.Positional; pos.valid; pos = pos.farLeft.above) {\n      let row = ' ';\n      let wall = pos.hidden ? '  ' : '||';\n\n      for (; pos.valid; pos = pos.right) {\n        row += pos.object.symbol + ' ';\n      }\n\n      rows.unshift(wall + row + wall);\n    }\n\n    return rows.join('\\n');\n  };\n\n  Serializer.toBitStream = function(field, ostream = new BitStreamWriter()) {\n    // count occurrence of objects on field\n    let frequencies = {};\n    for (let pos = new field.Positional; pos.valid; pos = pos.bottom.right) {\n      for (; pos.valid; pos = pos.above) {\n        const symbol = pos.object.symbol;\n        frequencies[symbol] = frequencies[symbol] ? frequencies[symbol] + 1 : 1;\n      }\n    }\n\n    let encodingTree = new PrefixTree(frequencies);\n\n    // header:\n    //   custom - encoding tree structure\n    \n    encodingTree.to(ostream);\n\n    // field data:\n    //   encode(object.symbol)... - encoded symbols. \n    //                              Order is c[0]r[0], c[0]r[1], ..., c[max]r[max]\n\n    let encoding = encodingTree.encoding();\n    for (let pos of field) encoding[pos.object.symbol](ostream);\n\n    return ostream;\n  };\n\n  return Serializer;\n}\n","import PrefixTree from '../Tools/PrefixTree.js';\n\nexport default function(Field) {\n  let Deserializer = {};\n\n  /** @return a mapping from Field Object symbol to values in Field.Object. */\n  const getSymbolToObjectMapping = function() {\n    return Object.values(Field.Object)\n                 .reduce((mapping, obj) => (mapping[obj.symbol] = obj, mapping), {});\n  };\n\n  Deserializer.fromAsciiArt = function(stream) {\n    let sym2obj = getSymbolToObjectMapping();\n    let rows = stream.split('\\n');\n    let field = new Field({\n      // last row is just decoration, not considering in deserialization;\n      // however, it is useful for determining the number of columns;\n      // slice -> remove 3-char walls on both sides,\n      // length / 2 -> every symbol is followed by a space, i.e. every symbol takes 2 characters\n      columns: Math.ceil(rows.pop().slice(3, -3).length / 2),\n      // count the number of rows where first character is a space\n      hiddenRows: (function(count) { for (let row of rows) if (row[0] == ' ') ++count; else break; return count; })(0),\n      visibleRows: rows.length - this.hiddenRows\n    });\n  \n    let pos = new field.Positional().top;\n  \n    for (let row of rows) {\n      // remove 3 character wall on both sides\n      let rowNoWalls = row.slice(3, -3);\n      // extract symbol char from row string\n      for (let [symbol, _, ...rest] = rowNoWalls;\n           rest.length > 0;\n           [symbol, _, ...rest] = rest\n      ) {\n        pos.object = sym2obj[symbol];\n        pos = pos.right;\n      }\n      pos = pos.farLeft.below;\n    }\n  \n    return field;\n  };\n\n  Deserializer.fromBitStream = function(field, istream) {\n    // header:\n    //   custom - encoding tree structure\n\n    let encodingTree = PrefixTree.from(istream);\n\n    // field data:\n    //   encode(object.symbol)... - encoded symbols. \n    //                              Order is c[0]r[0], c[0]r[1], ..., c[max]r[max]\n   \n    let sym2obj = getSymbolToObjectMapping();\n    for (let pos of field) pos.object = sym2obj[encodingTree.symbolFromStream(istream)];\n\n    return field;\n  };\n\n  return Deserializer;\n}\n","import FieldObject from './FieldObject.js';\nimport Algorithm from './Algorithm.js';\nimport Serializer from './Serializer.js';\nimport Deserializer from './Deserializer.js';\n\n/**\n * Indicates which bit to turn on for which direction of connection.\n *\n * Refer to Field.prototype.Positional.prototype.connections for a more\n * detailed description.\n */\nconst ConnectionBitField = {\n  BELOW: 1 << 0,\n  ABOVE: 1 << 1,\n  RIGHT: 1 << 2,\n  LEFT:  1 << 3,\n};\n\nexport default class Field {\n  /**\n   * Enums of valid objects.\n   * More objects can be added as follows:\n   *\n   *    Field.Object.NEW_OBJECT = new Field.Object.Properties({...});\n   *\n   * where the valid options are documented in './FieldObject.js'\n   */\n  static Object = FieldObject;\n\n  /**\n   * Common algorithms to run on a field.\n   */\n  static Algorithm = Algorithm;\n\n  /**\n   * Serializes the Field to various other format for display or storage.\n   */\n  static Serializer = Serializer(Field);\n\n  /**\n   * Deserializes serialized data back to a Field.\n   */\n  static Deserializer = Deserializer(Field);\n\n  /** \n   * Stores field data. Clients shall not hand modify this.\n   *\n   * Use this.Positional to access or mutate field data. \n   */\n  #data;\n\n  /**\n   * Constructs a Field.\n   * @param {Number} columns     =  6 - number of columns(width) of this field.\n   * @param {Number} visibleRows = 12 - number of visible rows of this field.\n   * @param {Number} hiddenRows  =  1 - number of hidden rows of this field.\n   * @param {[ [ Field.Object, ...], ... ]} - Array of Arrays of Field.Objects.\n   *                                          Each subarray represents one column of objects.\n   */\n  constructor({ columns     =  6,\n                visibleRows = 12,\n                hiddenRows  =  1,\n              } = {}) {\n    // TODO: allow changing these values?\n    this.dimension = {\n      columns:     columns     >= 0 ? columns     :  6,\n      visibleRows: visibleRows >= 0 ? visibleRows : 12,\n      hiddenRows:  hiddenRows  >= 0 ? hiddenRows  :  1,\n      get rows() { return this.visibleRows + this.hiddenRows; },\n    };\n\n    this.#data = [];\n\n    let self = this;\n\n    /**\n     * Inner class of this Field that specializes at dealing with positions \n     * of this Field. This should be used to access or mutate field objects.\n     * \n     * A Positional of {row: 0, col: 0} represents the bottomleft corner slot\n     * on the field.\n     */\n    this.Positional = class {\n      /**\n       * Constructs a Positional object.\n       * @param {Number} row    = 0 - row index this Positional represents, \n       *                              ignored if primitive is provided.\n       * @param {Number} column = 0 - column index this Positional represents, \n       *                              ignored if primitive is provided.\n       * @param {Number} primitive  - combined row and column this Positional represents,\n       *                              supersedes row and column if provided.\n       */\n      constructor({ row = 0, column = 0, primitive } = {}) {\n        if (primitive !== undefined) {\n          // Remember that a primitive is:\n          //\n          //   primitive = C * rows + R\n          //\n          // Therefore,\n          // \n          //   R = primitive % rows\n          //   C = floor(primitive / rows)\n          //   \n          this.row    = primitive % self.dimension.rows;\n          this.column = Math.floor(primitive / self.dimension.rows);\n        } else {\n          [this.row, this.column] = [row, column];\n        }\n      }\n\n      /**\n       * Primitive value of this Positional object. A primitive is defined as\n       *\n       *                     primitive = C * rows + R\n       *\n       * This is particularly useful when storing Positionals in Sets and Maps,\n       * since they only work well with primitive values.\n       */\n      get primitive() { return this.column * self.dimension.rows + this.row; }\n\n      /** @return a new Positional representing the slot above this Positional. */\n      get above() { return new this.constructor({ row: this.row + 1, column: this.column     }); }\n      /** @return a new Positional representing the slot below this Positional. */\n      get below() { return new this.constructor({ row: this.row - 1, column: this.column     }); }\n      /** @return a new Positional representing the slot to the left of this Positional. */\n      get left()  { return new this.constructor({ row: this.row,     column: this.column - 1 }); }\n      /** @return a new Positional representing the slot to the right of this Positional. */\n      get right() { return new this.constructor({ row: this.row,     column: this.column + 1 }); }\n      /** @return an array of new Positionals representing the slots adjacent to this Positional. */\n      get adjacent() { return [this.above, this.below, this.left, this.right]; }\n\n      /** @return a new Positional representing the slot at the top of the Field. */\n      get top()      { return new this.constructor({ row: self.dimension.rows - 1, column: this.column                }); }\n      /** @return a new Positional representing the slot at the far left of the Field. */\n      get farRight() { return new this.constructor({ row: this.row,                column: self.dimension.columns - 1 }); }\n      /** @return a new Positional representing the slot at the bottom of the Field. */\n      get bottom()   { return new this.constructor({ row: 0,                       column: this.column                }); }\n      /** @return a new Positional representing the slot at the far left of the Field. */\n      get farLeft()  { return new this.constructor({ row: this.row,                column: 0                          }); }\n\n      /** @return true if this position is in the hidden rows; false otherwise. */\n      get hidden() { return self.dimension.visibleRows <= this.row && this.row < self.dimension.rows; }\n      /** @return true if this position is within the bounds of this field; false otherwise. */\n      get valid() { return (0 <= this.row    && this.row    < self.dimension.rows   ) && \n                           (0 <= this.column && this.column < self.dimension.columns); }\n\n      /** @return the underlying Field this Positional belongs to. */\n      get field() { return self; }\n\n      /**\n       * Returns a connection bit field.\n       *\n       * Note that if the adjacent object is hidden, then it is not considered\n       * connected to this object. Similarly, if this object is hidden, it is\n       * not considered to be connected to any object.\n       *\n       * A connection bit field is a 4-bit Number that stores whether adjacent\n       * slots contain the same object as this slot.\n       *\n       * This information is most useful for determining sprite coordinates.\n       * For normal use case of checking whether this slot is connected to some\n       * adjacent slot, use other getters and check object equality instead.\n       *\n       * @return a connection bit field about this Positional.\n       */\n      get connections() {\n        if (this.object.hidden) return 0;\n\n        return 0 | (!this.below.hidden && this.below.object == this.object ? ConnectionBitField.BELOW : 0)\n                 | (!this.above.hidden && this.above.object == this.object ? ConnectionBitField.ABOVE : 0)\n                 | (!this.right.hidden && this.right.object == this.object ? ConnectionBitField.RIGHT : 0)\n                 | (!this.left.hidden  && this.left.object  == this.object ? ConnectionBitField.LEFT  : 0);\n      }\n\n      /**\n       * @return {Field.Object} the type of field object at this position if position is valid;\n       *                         undefined otherwise.\n       */\n      get object() {\n        if (!this.valid) return undefined;\n\n        const [row, column] = [this.row, this.column];\n\n        if (self.#data[column] && self.#data[column][row]) {\n          return self.#data[column][row];\n        } else {\n          return Field.Object.EMPTY;\n        }\n      }\n\n      /**\n       * Sets the type of field object at this position, if this position is valid.\n       * If EMPTY is supplied, removes the object from this Field.\n       * @param {Field.Object} obj - new Object at this position.\n       */\n      set object(obj) {\n        if (!this.valid || !Object.values(Field.Object).includes(obj)) return;\n\n        const [row, column] = [this.row, this.column];\n\n        if (obj === Field.Object.EMPTY) {\n          if (!self.#data[column]) return;\n          delete self.#data[column][row];\n        } else {\n          if (!self.#data[column]) self.#data[column] = [];\n          self.#data[column][row] = obj;\n        }\n      }\n    };\n  }\n\n  /**\n   * Generates valid positions in this field, in the order of r[0]c[0], r[1]c[0] ... r[max]c[max].\n   */\n  *[Symbol.iterator]() {\n    for (let pos = new this.Positional; pos.valid; pos = pos.right.bottom)\n      for (; pos.valid; pos = pos.above)\n        yield pos;\n  }\n\n  clone() {\n    let cloned = new this.constructor(this.dimension);\n    cloned.#data = this.#data.map(column => column !== undefined ? column.slice() : undefined);\n    return cloned;\n  }\n}\n","const CHAR_BIT = 8;\n\nconst Base64 = require('base64-js');\n\nexport default class BitStreamReader {\n  #buffer = 0;\n  #bitsInBuffer = 0;\n  #stream;\n\n  /**\n   * Constructs this BitStreamReader.\n   *\n   * @param {String} base64 - the base64-encoded string that contains binary\n   *                          data for this stream to read.\n   */\n  constructor(base64) {\n    this.#stream = Array.from(Base64.toByteArray(base64));\n  }\n\n  /**\n   * Reads some bits from the stream.\n   *\n   * @param {Number} bitCount - The number of bits to read from the stream.\n   * \n   * @return {Number} a number with the first bitCount-bits containing the\n   *                  data read from the stream. \n   *                  0 for any nonpositive bitCount.\n   *                  undefined if stream is already empty.\n   */\n  read(bitCount) {\n    // caller wants 0 bit, just don't do anything\n    if (bitCount <= 0) return 0;\n\n    // buffer has nothing, populate it\n    if (this.#bitsInBuffer === 0) {\n      // stream has nothing, no more bit to read\n      if (this.#stream.length === 0) return undefined;\n\n      this.#buffer = this.#stream.shift();\n      this.#bitsInBuffer = CHAR_BIT;\n    }\n\n    const result = // get 1 desired bit from buffer\n                   ((this.#buffer >> --this.#bitsInBuffer) & 1)\n                   // shift it to the leftmost bit in return value\n                   << (bitCount - 1);\n\n    return result | this.read(bitCount - 1);\n  }\n\n  /**\n   * Reads a variable length quantity. Refer to BitStreamWriter for explanation\n   * of variable length quantities.\n   */\n  readVariableLength(partitionBitCount) {\n    let result = 0;\n    do {\n      var shouldContinue = this.read(1);\n      result <<= partitionBitCount;\n      result |= this.read(partitionBitCount);\n    } while (shouldContinue === 1);\n    return result;\n  }\n}\n","import Field from '../Field/Field.js';\nimport BitStreamWriter from '../Tools/BitStreamWriter.js';\nimport BitStreamReader from '../Tools/BitStreamReader.js';\n\n// color puyo\nField.Object.RED = new Field.Object.Properties({ symbol: 'R', cleared: () => Field.Object.EMPTY });\nField.Object.YELLOW = new Field.Object.Properties({ symbol: 'Y', cleared: () => Field.Object.EMPTY });\nField.Object.BLUE = new Field.Object.Properties({ symbol: 'B', cleared: () => Field.Object.EMPTY });\nField.Object.GREEN = new Field.Object.Properties({ symbol: 'G', cleared: () => Field.Object.EMPTY });\nField.Object.PURPLE = new Field.Object.Properties({ symbol: 'P', cleared: () => Field.Object.EMPTY });\n\n// non-clearable puyo\nField.Object.BLOCK = new Field.Object.Properties({ symbol: '=', gravityImmune: true });\nField.Object.IRON = new Field.Object.Properties({ symbol: '-' });\n\n// nuisance puyo\nField.Object.NUISANCE = new Field.Object.Properties({ symbol: 'o', adjacentCleared: () => Field.Object.EMPTY });\nField.Object.HARD_NUISANCE = new Field.Object.Properties({ symbol: 'O', adjacentCleared: () => Field.Object.NUISANCE });\n\n// every value to bit stream can have at most 32 bits;\n// bits beyond 32 will be truncated and ignored.\nconst MAX_BIT_COUNT = 32;\n\nexport default class Game {\n  // Subclasses should register themselves into this Array for serialization,\n  // Each subclass must take a unique spot in this array.\n  static Modes = [];\n\n  static Serializer = class {\n    /**\n     * Outputs a header to the given bit stream.\n     *\n     * The header stores the rule, dimension and/or other parameters of a Game.\n     * To conserve bits, it only stores parameters that are not at their\n     * default values.\n     *\n     * The structure of the header will look like:\n     *  {\n     *    0, if actual == default, otherwise\n     *    1, then {\n     *      0, if actual === null,\n     *      1, then <varlen<partition size>>\n     *    }\n     *  } * default.length\n     *\n     * For example, with actual = [1, 2, 3, null], default = [1, 1, 3, 2], partSize = [4, 4, 4, 4],\n     * The binary of header will look like: 0b0100001010, because:\n     * 0b 0         actual[0] == default[0]\n     *    1         actual[1] != default[1]\n     *      00001   varlen<partSize[1]>(actual[1])\n     *    0         actual[2] == default[2]\n     *    1         actual[3] != default[3]\n     *      0       actual[3] === null\n     *  \n     * @param {BitOutputStream} ostream - the bit stream to output the header to.\n     * @param {[Number, ...]} actualParams - the array of actual parameter values\n     *                                       to be stored.\n     * @param {[Number, ...]} defaultParams - the array of default parameter\n     *                                        values to compare actual values\n     *                                        against.\n     * @param {[Number, ...]} partitionSize - the partition bit count of a varlen\n     *                                        data, if the actual value is\n     *                                        different from the default value.\n     */\n    static headerToBitStream(ostream, {\n      actualParams, \n      defaultParams,\n      partitionSizes\n    }) {\n      for (let index = 0; index < defaultParams.length; ++index) {\n        if (actualParams[index] === defaultParams[index]) {\n          ostream.write({ value: 0, writeBitCount: 1 });\n        } else {\n          ostream.write({ value: 1, writeBitCount: 1 });\n          if (actualParams[index] === null) {\n            ostream.write({ value: 0, writeBitCount: 1 });\n          } else {\n            ostream.write({ value: 1, writeBitCount: 1 });\n            ostream.writeVariableLength({\n              value: actualParams[index],\n              writeBitCount: MAX_BIT_COUNT,\n              partitionBitCount: partitionSizes[index]\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Serializes the given game to an output bit stream.\n     *\n     * @param {Game} game - the game object to serialize.\n     * @param {BitStreamWriter} ostream = new BitStreamWriter() -\n     *        the bit output stream to serialize the game to. May be omitted,\n     *        in which case an empty stream will be used.\n     * @return {BitStreamWriter} the given ostream.\n     */\n    static toBitStream(game, ostream = new BitStreamWriter()) {\n      ostream.writeVariableLength({\n        value: Game.Modes.indexOf(game.constructor),\n        writeBitCount: MAX_BIT_COUNT,\n        partitionBitCount: 4\n      });\n\n      return game.constructor.Serializer.toBitStream(game, ostream);\n    }\n\n    /**\n     * Serialzies the given game to a base64 encoded string.\n     *\n     * @param {Game} game - the game to serialize.\n     * @return {String} the base64 encoded string.\n     */\n    static toBase64(game) {\n      return Game.Serializer.toBitStream(game).finalize();\n    }\n  }\n\n  static Deserializer = class {\n    /**\n     * Convenience function to convert an array of param values to an array of\n     * objects, each of whose keys are given by objectKeys.\n     *\n     * For example, with array = [1, 2, 3, 4, 5], objectKeys = [[a, b, c], [d, e]],\n     * returns [{ a:1, b:2, c:3 }, { d:4, e:5 }].\n     *\n     * @param {[Number, ...]} array - the array of values to convert to objects from.\n     * @param {[[String, ...], ...]} - the array of arrays of strings, with each\n     *                                 subarray represents an object in the result,\n     *                                 and with each string represents a key in the\n     *                                 resultant object.\n     * @return {[Object, ...]} - an array of objects as described above.\n     */\n    static array2objects({ array, objectKeys }) {\n      let result = [];\n      for (let keys of objectKeys) {\n        result.push(keys.reduce((obj, k) => (obj[k] = array.shift(), obj), {}));\n      }\n      return result;\n    }\n\n    /**\n     * Reads from the header and returns an array of actual values. Reverses\n     * Game.Serializer.headerToBitStream.\n     */ \n    static headerFromBitStream(istream, {\n      defaultParams,\n      partitionSizes\n    }) {\n      for (let index = 0; index < defaultParams.length; ++index) {\n        if (istream.read(1) === 0) continue;\n        defaultParams[index] = istream.read(1) === 0 ? null\n                                                     : istream.readVariableLength(partitionSizes[index]);\n      } \n\n      return defaultParams;\n    }\n\n    /**\n     * Deserializes a Game object from the given bit stream.\n     *\n     * @param {BitStreamReader} istream - the bit input stream to read from.\n     * @return {Game} the deserialized Game object.\n     */\n    static fromBitStream(istream) {\n      return Game.Modes[istream.readVariableLength(4)].Deserializer.fromBitStream(istream);\n    }\n\n    /**\n     * Deserializes a Game object from the given base64 encoded string.\n     *\n     * @param {String} base64 - the base64 encoded string.\n     * @return {Game} the deserialized Game object.\n     */\n    static fromBase64(base64) {\n      return Game.Deserializer.fromBitStream(new BitStreamReader(base64));\n    }\n  }\n\n  constructor({ rule, dimension }) {\n    this.rule = rule;\n    this.field = new Field(dimension);\n  }\n}\n","export const BLOCK_WIDTH = 32;\nexport const RECOVERY_FRAME = [19, 24, 28, 31, 34, 37, 40, 42, 44, 46, 48];\nexport const STATE_IDLE = 'STATE_IDLE';\nexport const STATE_END = 'STATE_END';\nexport const STATE_PLAY = 'STATE_PLAY';\nexport const STATE_STEP = 'STATE_STEP';\nexport const STATE_RESET = 'STATE_RESET';\n","<template>\n  <div id=\"puyostage\"></div>\n</template>\n\n<script>\n  import * as PIXI from 'pixi.js';\n  import { TimelineMax } from 'gsap/TweenMax';\n  import PixiPlugin from 'gsap/PixiPlugin'; // eslint-disable-line no-unused-vars\n  import Game from './simulator/Game/Game.js';\n  import Field from './simulator/Field/Field.js';\n  import { BLOCK_WIDTH, RECOVERY_FRAME, STATE_IDLE, STATE_PLAY, STATE_STEP, STATE_RESET, STATE_END } from './simulator/Constant';\n\n  export default {\n    name: 'PuyoField',\n    data() {\n      return {\n        app: null,\n        container: {\n          bg: null,\n          puyo: null,\n        },\n        game: null,\n        pixifield: null,\n        playable: true,\n      };\n    },\n    props: {\n      base64: String,\n      state: String,\n    },\n    watch: {\n      state(newState, oldState) {\n        switch (newState) {\n          case STATE_PLAY:\n              if (oldState === STATE_IDLE) {\n                this.play();\n              } else {\n                this.$emit('update:state', STATE_IDLE);\n              }\n            break;\n          case STATE_STEP:\n              if (oldState === STATE_IDLE) {\n                this.step();\n              } else {\n                this.$emit('update:state', STATE_IDLE);\n              }\n            break;\n          case STATE_RESET:\n              if ((oldState === STATE_IDLE) ||\n                  (oldState === STATE_END)) {\n                this.reset();\n              } else {\n                this.$emit('update:state', STATE_IDLE);\n              }\n            break;\n          case STATE_IDLE:\n          case STATE_END:\n          default:\n            break;\n        }\n      },\n    },\n    methods: {\n      timelinePromise(timeline, diff, state) {\n        return new Promise((resolve) => {\n            timeline.play();\n            timeline.eventCallback('onComplete', () => {\n              if (state === 'gravity') {\n                this.setpuyo(diff.otherPositional, diff.otherPositional.connections);\n              }\n              resolve();\n            });\n        });\n      },\n      async step() {\n        if (this.state === STATE_END) {\n          return;\n        }\n        let condition = await this.gravity() || await this.clear();\n        if (condition) {\n          this.$emit('update:state', STATE_IDLE);\n        } else {\n          this.$emit('update:state', STATE_END);\n        }\n      },\n      async play() {\n        let condition = (this.state !== STATE_END);\n        while (condition) {\n          if (this.state === STATE_PLAY) {\n            condition = await this.gravity() || await this.clear();\n          } else {\n            return;\n          }\n        }\n        this.$emit('update:state', STATE_END);\n      },\n      reset() {\n        for (var i = this.container.puyo.children.length - 1; i >= 0; i--) {\n          this.container.puyo.removeChild(this.container.puyo.children[i]);\n        }\n        this.game = Game.Deserializer.fromBase64(this.base64);\n        this.loadpuyo();\n        this.$emit('update:state', STATE_IDLE);\n      },\n      async gravity() {\n        let tl_arr = [];\n        // get diff\n        let gravitationalDiff = this.game.field.gravitate();\n        if (gravitationalDiff.length === 0) {\n          return false;\n        }\n        for (let diff of gravitationalDiff) {\n          // create drop animation timeline\n          let tl = new TimelineMax({ paused: true });\n          this.setpuyo(diff.positional);\n          tl.to(\n            this.pixifield[diff.positional.row][diff.positional.column],\n            RECOVERY_FRAME[diff.positional.row - diff.otherPositional.row] / 60,\n            { pixi: { y: (this.game.field.dimension.rows - diff.otherPositional.row - 1) * BLOCK_WIDTH },\n             ease: 'Linear' }\n          ).to(\n            this.pixifield[diff.positional.row][diff.positional.column],\n            0.1, \n            {\n              pixi: { scaleY: 0.8 },\n            }\n          ).to(\n            this.pixifield[diff.positional.row][diff.positional.column],\n            0.1, \n            {\n              pixi: { scaleY: 1 },\n              yoyo: true\n            }\n          );\n          this.pixifield[diff.otherPositional.row][diff.otherPositional.column] = this.pixifield[diff.positional.row][diff.positional.column];\n          this.pixifield[diff.positional.row][diff.positional.column] = null;\n          tl_arr.push([tl, diff]);\n        }\n        gravitationalDiff.apply();\n        // map async functions\n        const drop_animation = tl_arr.map(async (obj) => this.timelinePromise(obj[0], obj[1], 'gravity'));\n        // wait all timelines completed\n        await Promise.all(drop_animation).then(() => {\n          // check puyo connections\n          this.loadpuyo(false);\n        });\n        return true;\n      },\n      async clear() {\n        let tl_arr = [];\n        // set connections\n        let connections = this.game.field.connections();\n        let flatten = arrs => arrs.reduce((acc, arr) => acc.concat(arr), []);\n        let flattenedConnections = flatten(flatten(Array.from(connections.values())));\n        if (flattenedConnections.length === 0) {\n          return false;\n        }\n        this.game.field.clear().forEach(diff => {\n          // create timeline\n          let tl = new TimelineMax({ paused: true });\n          tl.to(\n            this.pixifield[diff.positional.row][diff.positional.column],\n            0.1, \n            { pixi: { alpha: 0.5 }, repeat: 5, yoyo: true, onComplete: ()=>{\n              // remove sprite when clear animation complete\n              this.container.puyo.removeChild(this.pixifield[diff.positional.row][diff.positional.column]);\n              this.pixifield[diff.positional.row][diff.positional.column] = null;\n              }\n            },\n          );\n          tl_arr.push([tl, diff]);\n          diff.apply();\n        });\n        // map async functions\n        const clear_animation = tl_arr.map(async (obj) => { return this.timelinePromise(obj[0], obj[1], 'clear'); });\n        // wait all timelines completed\n        await Promise.all(clear_animation);\n        return true;\n      },\n      loadbg() {\n        let bgtex = PIXI.loader.resources['pic/bg.json'].textures;\n        // set background\n        let bg = new PIXI.extras.TilingSprite(\n            bgtex['bg'],\n            this.app.screen.width,\n            this.app.screen.height\n        );\n        this.container.bg.addChild(bg);\n        let bgleft = new PIXI.extras.TilingSprite(\n            bgtex['bgleft'],\n            48,\n            this.app.screen.height\n        );\n        this.container.bg.addChild(bgleft);\n        let bgtop = new PIXI.extras.TilingSprite(\n            bgtex['bgtop'],\n            this.app.screen.width,\n            48\n        );\n        this.container.bg.addChild(bgtop);\n        let pole1_left = new PIXI.extras.TilingSprite(\n            bgtex['pole1'],\n            BLOCK_WIDTH,\n            this.app.screen.height\n        );\n        pole1_left.y = this.game.field.dimension.hiddenRows * BLOCK_WIDTH;\n        this.container.bg.addChild(pole1_left);\n        let pole1_right = new PIXI.extras.TilingSprite(\n            bgtex['pole1'],\n            BLOCK_WIDTH,\n            this.app.screen.height\n        );\n        pole1_right.x = this.app.screen.width - BLOCK_WIDTH;\n        pole1_right.y = this.game.field.dimension.hiddenRows * BLOCK_WIDTH;\n        this.container.bg.addChild(pole1_right);\n        let pole0_left = new PIXI.Sprite(bgtex['pole0']);\n        pole0_left.y = this.game.field.dimension.hiddenRows * BLOCK_WIDTH;\n        this.container.bg.addChild(pole0_left);\n        let pole0_right = new PIXI.Sprite(bgtex['pole0']);\n        pole0_right.x = this.app.screen.width - BLOCK_WIDTH;\n        pole0_right.y = this.game.field.dimension.hiddenRows * BLOCK_WIDTH;\n        this.container.bg.addChild(pole0_right);\n        let block = new PIXI.extras.TilingSprite(\n            bgtex['block'],\n            this.game.field.dimension.columns * BLOCK_WIDTH,\n            BLOCK_WIDTH\n        );\n        block.x = BLOCK_WIDTH;\n        block.y = this.app.screen.height - BLOCK_WIDTH;\n        this.container.bg.addChild(block);\n      },\n      loadpuyo(init = true) {\n        // set puyo\n        for (let pos of this.game.field) {\n          if (init && pos.object !== Field.Object.EMPTY) {\n            // new Sprite object\n            this.pixifield[pos.row][pos.column] = new PIXI.Sprite();\n          }\n          this.setpuyo(pos, pos.connections);\n        }\n      },\n      setpuyo(pos, connections = 0) {\n        let skintex = PIXI.loader.resources['pic/skin.json'].textures;\n        let thisPuyo = this.pixifield[pos.row][pos.column];\n        if (!thisPuyo) {\n          return;\n        }\n        switch (pos.object) {\n          case Field.Object.RED:\n            thisPuyo.texture = skintex[`red${connections}`];\n            break;\n          case Field.Object.GREEN:\n            thisPuyo.texture = skintex[`green${connections}`];\n            break;\n          case Field.Object.BLUE:\n            thisPuyo.texture = skintex[`blue${connections}`];\n            break;\n          case Field.Object.YELLOW:\n            thisPuyo.texture = skintex[`yellow${connections}`];\n            break;\n          case Field.Object.PURPLE:\n            thisPuyo.texture = skintex[`purple${connections}`];\n            break;\n          default:\n            break;\n        }\n        thisPuyo.x = (pos.column + 1) * BLOCK_WIDTH;\n        thisPuyo.y = (this.game.field.dimension.rows - pos.row - 1) * BLOCK_WIDTH;\n        this.container.puyo.addChild(thisPuyo);\n      }\n    },\n    created() {\n      this.game = Game.Deserializer.fromBase64(this.base64);\n      this.pixifield = new Array(this.game.field.dimension.rows).fill(null).map(() => new Array(this.game.field.dimension.columns).fill(null));\n      this.app = new PIXI.Application({\n        width: (this.game.field.dimension.columns + 2) * BLOCK_WIDTH, // left & right pole (+2)\n        height: (this.game.field.dimension.rows + 1) * BLOCK_WIDTH,   // floor (+1)\n        antialias: true,\n        transparent: false,\n        resolution: 1\n      });\n      this.container.bg = new PIXI.Container();\n      this.container.puyo = new PIXI.Container();\n      // make 2 groups for background and puyo\n      this.app.stage.addChild(this.container.bg);\n      this.app.stage.addChild(this.container.puyo);\n      PIXI.loader\n      .add('pic/bg.json')\n      .add('pic/skin.json')\n      .load(this.loadbg)\n      .load(this.loadpuyo);\n    },\n    mounted() {\n      document.getElementById('puyostage').appendChild(this.app.view);\n    },\n    destroyed() {\n      this.app.destroy();\n    }\n  };\n</script>\n\n<style>\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulatorField.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulatorField.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PuyoSimulatorField.vue?vue&type=template&id=46727571&\"\nimport script from \"./PuyoSimulatorField.vue?vue&type=script&lang=js&\"\nexport * from \"./PuyoSimulatorField.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"player\">\n    <PuyoField :base64=\"base64\" :state.sync=\"state\"/>\n    <ul class=\"player__control\">\n      <li v-if=\"!playing\" v-on:click.stop=\"play\">\n        <i class=\"fas fa-play\"></i>\n      </li>\n      <li v-if=\"playing\" v-on:click.stop=\"stop\">\n        <i class=\"fas fa-pause\"></i>\n      </li>\n      <li v-on:click.stop=\"step\">\n        <i class=\"fas fa-step-forward\"></i>\n      </li>\n      <li v-on:click.stop=\"reset\">\n        <i class=\"fas fa-fast-backward\"></i>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n  import PuyoField from './PuyoSimulatorField.vue';\n  import { STATE_IDLE, STATE_PLAY, STATE_STEP, STATE_RESET } from './simulator/Constant';\n\n  export default {\n    components: {\n      PuyoField,\n    },\n    props: {\n      base64: String,\n    },\n    data() {\n      return {\n        state: STATE_IDLE,\n      };\n    },\n    computed: {\n      playing() {\n        return this.state === STATE_PLAY;\n      }\n    },\n    methods: {\n      play() {\n        this.state = STATE_PLAY;\n      },\n      stop() {\n        this.state = STATE_IDLE;\n      },\n      step() {\n        this.state = STATE_STEP;\n      },\n      reset() {\n        this.state = STATE_RESET;\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n.player {\n  background-color: #24292E;\n  &__control {\n    display: flex;\n    justify-content: center;\n    li {\n      width: 25%;\n      background-color: #151515;\n      color: #ddd;\n      padding: 3px 0px;\n      border-radius: 2px;\n      border: #ddd solid 1px;\n      text-align: center;\n      cursor: pointer;\n      margin: 0 2px;\n      &:hover {\n        background-color: #252525;\n      }\n    }\n  }\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulatorPlayer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulatorPlayer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PuyoSimulatorPlayer.vue?vue&type=template&id=7758b275&scoped=true&\"\nimport script from \"./PuyoSimulatorPlayer.vue?vue&type=script&lang=js&\"\nexport * from \"./PuyoSimulatorPlayer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PuyoSimulatorPlayer.vue?vue&type=style&index=0&id=7758b275&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7758b275\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"editor\">\n    <PuyoPlayer :base64=\"base64\"/>\n    <div class=\"editor__control\">\n      <ul class=\"editor__color\">\n        <li class=\"editor__color--red\"></li>\n        <li class=\"editor__color--green\"></li>\n        <li class=\"editor__color--blue\"></li>\n        <li class=\"editor__color--yellow\"></li>\n        <li class=\"editor__color--purple\"></li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\n  import PuyoPlayer from './PuyoSimulatorPlayer.vue';\n\n  export default {\n    components: {\n      PuyoPlayer,\n    },\n    props: {\n      base64: String,\n    },\n    data() {\n      return {\n        minConnections: 4,\n      };\n    },\n    computed: {\n    },\n    methods: {\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n$skin-block-size: 32px;\n$skin-puyo-size: $skin-block-size * 2;\n\n@mixin set-skin($x,$y) {\n  background: url(/pic/skin.png) #{$skin-puyo-size * $x} #{$y * $skin-block-size};\n}\n\n.editor {\n  display: flex;\n  background-color: #24292E;\n  &__color {\n    display: flex;\n    li {\n      width: $skin-puyo-size;\n      padding-bottom: $skin-puyo-size;\n      margin: 5px;\n      border-radius: 5px;\n      border: #ddd solid 1px;\n      background-color: #333;\n      cursor: pointer;\n      &:hover {\n        background-color: #555;\n      }\n    }\n    &--red {\n      @include set-skin(0,-5);\n    }\n    &--green {\n      @include set-skin(-1,-5);\n    }\n    &--blue {\n      @include set-skin(-2,-5);\n    }\n    &--yellow {\n      @include set-skin(-3,-5);\n    }\n    &--purple {\n      @include set-skin(-4,-5);\n    }\n  }\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulatorEditor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulatorEditor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PuyoSimulatorEditor.vue?vue&type=template&id=aba63f82&scoped=true&\"\nimport script from \"./PuyoSimulatorEditor.vue?vue&type=script&lang=js&\"\nexport * from \"./PuyoSimulatorEditor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PuyoSimulatorEditor.vue?vue&type=style&index=0&id=aba63f82&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"aba63f82\",\n  null\n  \n)\n\nexport default component.exports","/**\n * Encapsulates the algorithm of updating nuisance rate into a generator.\n */\nclass NuisanceRateGenerator {\n  #initialRate;\n\n  constructor(initialRate) {\n    this.#initialRate = initialRate;\n  }\n\n  #update = rate => Math.floor(rate / 2);\n\n  /**\n   * The nuisance rate alternates between two pools. The first pool's initial\n   * value is the initial nuisance rate, while the second pool's initial value\n   * is 3 quarters of the initial nuisance rate. Before margin time begins, the\n   * rate is the current value in pool 1. Afterwards, the nuisance rate\n   * switches pools and is halved and truncated every update, until the rate\n   * reaches its minimum of 1, or a total of 14 times nuisance rate has changed,\n   * whichever is sooner.\n   */\n  *[Symbol.iterator]() {\n    // the factors of initial values of nuisance rates in the respective pools\n    const POOL_0_FACTOR = 1;\n    const POOL_1_FACTOR = 3 / 4;\n\n    // maximum number of times to update nuisance rate\n    const MAX_UPDATE_COUNT = 14;\n\n    let ratePool = [ this.#initialRate * POOL_0_FACTOR, \n                     this.#initialRate * POOL_1_FACTOR ];\n\n    for (let updateCount = 0; updateCount <= MAX_UPDATE_COUNT; ++updateCount) {\n      const pool = updateCount % ratePool.length;\n\n      yield ratePool[pool];\n      ratePool[pool] = this.#update(ratePool[pool]);\n\n      // after updating, rate becomes 0, so it was at its minimum of 1 before\n      if (ratePool[pool] <= 0) return;\n    }\n  }\n}\n\n/**\n * Represents common elements of a Puyo game rule, and convenience functions\n * based on the given rule.\n */\nexport default class Rule {\n  /**\n   * Consturcts a Rule object.\n   *\n   * @param {Number} initialNuisanceRate - the initial rate to convert points to\n   *                                       nuisance count.\n   * @param {Number} marginTime - time in seconds after which attack power\n   *                              intensifies. The exact intensification rule\n   *                              is defined by the game mode.\n   *                              May be null, in which case the margin time\n   *                              power intensification never applies.\n   * @param {Number} minClearConnection - the minimum size of connection that\n   *                                      triggers clearance.\n   */\n  constructor({ initialNuisanceRate, marginTime, minClearConnection }) {\n    this.initialNuisanceRate = initialNuisanceRate;\n    this.marginTime = marginTime;\n    this.minClearConnection = minClearConnection;\n  }\n\n  /**\n   * Converts points to nuisance count.\n   *\n   * @param {Number} point - points to convert to nuisance count from.\n   * @param {Number} time - seconds that the game has passed. Used to factor in\n   *                        margin time.\n   * @return {[Number, Number]} An array of two Numbers, where the first Number\n   *                            is the nuisance count, and the second Number is\n   *                            the remainder of point divided by nuisance rate.\n   */\n  nuisanceCount({ point, time = 0 }) {\n    const adjustedRate = this.nuisanceRate({ time: time });\n    return [ \n      Math.floor(point / adjustedRate),\n      point % adjustedRate\n    ];\n  }\n\n  /**\n   * Retrieves the nuisance rate with margin time factored in, given the time\n   * in seconds the game has passed.\n   *\n   * The nuisance rate algorithm is usually common across different game modes,\n   * but subclassed game modes may override this method to apply their own\n   * margin time algorithm.\n   *\n   * @param {Number} time = 0 - seconds that the game has passed.\n   * @return {Number} the nuisance rate with margin time factored in.\n   */\n  nuisanceRate({ time = 0 }) {\n    if (this.marginTime === null) return this.initialNuisanceRate;\n    // update of nuisance rate happens every 16 seconds\n    const UPDATE_RATE = 16;\n\n    time -= this.marginTime;\n\n    for (var rate of new NuisanceRateGenerator(this.initialNuisanceRate)) {\n      if (time < 0) break;\n      time -= UPDATE_RATE;\n    }\n\n    return rate;\n  }\n\n  /**\n   * Returns the nuisance rate multiplier given the time in seconds that the\n   * game has passed. This should only be used for display purpose because\n   * the initial nuisance rate may not be divisible by actual nuisance rate,\n   * causing rounding errors.\n   *\n   * @return {Number} the quotient of initial nuisance rate divided by actual\n   *                  nuisance rate after applying margin time.\n   */\n  nuisanceRateMultiplier({ time = 0 }) {\n    return this.initialNuisanceRate / this.nuisanceRate({ time: time });\n  }\n}\n","/**\n * Returns number, but clamped to the given min and max.\n */\nexport default function clamp(number, min, max) {\n  return Math.min(Math.max(number, min), max);\n}\n","import Game from './Game.js';           // inheritance\nimport Rule from './Rule.js';           // inheritance\nimport Field from '../Field/Field.js';  // Field.Algorithm, Field.Object\nimport Diff from '../Field/Diff.js';    // Diff.Type enum\nimport clamp from '../Tools/Clamp.js';\n\nconst RULE_KEYS = [\n  'initialNuisanceRate', \n  'marginTime', \n  'minClearConnection', \n  'nuisanceTransformPoint', \n  'level'\n];\n\nconst RULE_PARTITION_SIZES = [\n  8, // classic max 255, modern max 990, partition max 255\n  9, // classic max 992, modern max 256, partition max 510\n  3, // classic max 72,  modern max ???, partition max 7\n  8, // classic max 255, modern max 0,   partition max 255\n  5, // max unknown, partition max 31 \n];\n\nconst DEFAULT_RULE = {\n  // common rule\n  initialNuisanceRate: 70, marginTime: 96, minClearConnection: 4,\n  // custom rule\n  nuisanceTransformPoint: 0, level: 1\n};\n\n\n\nconst DIMENSION_KEYS = [\n  'columns', 'visibleRows', 'hiddenRows'\n];\n\nconst DEFAULT_DIMENSION = {\n  columns:      6,\n  visibleRows: 12,\n  hiddenRows:   1\n};\n\nconst DIMENSION_PARTITION_SIZES = [\n  5, // partition max 255\n  5, // partition max 255\n  2, // partition max 3\n];\n\nexport default class Tsu extends Game {\n  static GAME_ID = 0;\n\n  static Serializer = class {\n    /**\n     * Serializes the given game to the given bit output stream.\n     *\n     * Outputs header using the helper in Game.Serializer. Then outputs the\n     * field.\n     */\n    static toBitStream(game, ostream) {\n\n      Game.Serializer.headerToBitStream(ostream, {\n        actualParams: [\n          ...RULE_KEYS.map(k => game.rule[k]),\n          ...DIMENSION_KEYS.map(k => game.field.dimension[k])\n        ],\n        defaultParams: [\n          ...RULE_KEYS.map(k => DEFAULT_RULE[k]),\n          ...DIMENSION_KEYS.map(k => DEFAULT_DIMENSION[k])\n        ],\n        partitionSizes: [...RULE_PARTITION_SIZES, ...DIMENSION_PARTITION_SIZES]\n      });\n\n      Field.Serializer.toBitStream(game.field, ostream);\n\n      return ostream;\n    }\n  }\n\n  static Deserializer = class {\n    /**\n     * Deserializes a Tsu game object from the given bit input stream.\n     */\n    static fromBitStream(istream) {\n      let params = Game.Deserializer.headerFromBitStream(istream, {\n        defaultParams: [\n          ...RULE_KEYS.map(k => DEFAULT_RULE[k]),\n          ...DIMENSION_KEYS.map(k => DEFAULT_DIMENSION[k])\n        ],\n        partitionSizes: [...RULE_PARTITION_SIZES, ...DIMENSION_PARTITION_SIZES]\n      });\n\n      let [rule, dimension] = Game.Deserializer.array2objects({ \n        array: params, \n        objectKeys: [RULE_KEYS, DIMENSION_KEYS]\n      });\n\n      let game = new Tsu({ rule: rule, dimension: dimension });\n      Field.Deserializer.fromBitStream(game.field, istream);\n\n      return game;\n    }\n  }\n\n  static Rule = class extends Rule {\n    /**\n     * @param {Number} rule.initialNuisanceRate = 70 - refer to Game.Rule.\n     * @param {Number} rule.marginTime = 96 - refer to Game.Rule.\n     * @param {Number} rule.minClearConnection = 4 - refer to Game.Rule.\n     * @param {Number} rule.nuisanceTransformPoint = 0 - points given when nuisance\n     *                                                   transforms to other objects.\n     * @param {Number} rule.level = 1 - usually a factor in Endless modes. Multiplier\n     *                                  to transform points.\n     */\n    constructor(rule = DEFAULT_RULE) {\n      super(rule);\n      this.nuisanceTransformPoint = rule.nuisanceTransformPoint;\n      this.level = rule.level;\n    }\n\n    /**\n     * Calculates the chain bonus for the given chain count.\n     *\n     * This bonus function is Type 2 in the classic Tsu game. There are 3 other\n     * chain bonus functions but they are not used in modern games anymore.\n     */\n    chainBonus(chain) {\n      return chain < 4 ? (chain - 1) * 8 : (chain - 3) * 32;\n    }\n\n    /**\n     * Calculates the color bonus points given the color count.\n     *\n     * The bonus points can be summarized by the following table:\n     * \n     * color | bonus\n     * ------+------\n     *   1   |   0\n     *   2   |   3\n     *   3   |   6 = 2 * 3\n     *   4   |  12 = 2 * 6\n     *   5   |  24 = 2 * 12\n     */\n    colorBonus(colorCount) {\n      switch (Math.abs(colorCount)) {\n        case 0: case 1: return 0;\n        case 2:         return 3;\n        default:        return 2 * this.colorBonus(colorCount - 1);\n      }\n    }\n\n    /**\n     * Calculates the group bonus points given the connection size.\n     *\n     * Calculation can be summarized by the following table:\n     *\n     * bonusConnection | bonus\n     * ----------------+------\n     *        0        |   0\n     *        1        |   2 = 1 + 1\n     *        2        |   3 = 2 + 1\n     *       ...       |  ...\n     *        6        |   7 = 6 + 1\n     *       7+        |   10\n     *\n     * where bonusConnection is the number of objects cleared that is beyond\n     * the minimum clear requirement, or beyond 4, whichever is greater.\n     */\n    groupBonus(groupSize) {\n      let bonusConnection = groupSize - Math.min(this.minClearConnection, 4);\n      if (bonusConnection == 0) return 0;\n      else if (bonusConnection >= 7) return 10;\n      else return bonusConnection + 1;\n    }\n\n    /**\n     * Retrieves the transformation points added for the given diff.\n     *\n     * In Tsu, colored object transformations are worth 10 points. Additionally,\n     * transforming nuisance may add bonus points if this.nuisanceTransformBonus\n     * is not 0.\n     */\n    transformPoint(diff) {\n      // no point should be given for non-transformations\n      if (diff.type != Diff.Type.TRANSFORM) return 0;\n\n      switch (diff.positional.object) {\n        case Field.Object.RED:\n        case Field.Object.YELLOW:\n        case Field.Object.BLUE:\n        case Field.Object.GREEN:\n        case Field.Object.PURPLE:\n          return 10;\n\n        case Field.Object.HARD_NUISANCE:\n          if (diff.newObject === Field.Object.EMPTY) {\n            return this.nuisanceTransformPoint * 6;\n          }\n\n        // intentional fallthrough\n        case Field.Object.NUISANCE:\n          return this.nuisanceTransformPoint;\n      }\n    }\n\n    /**\n     * Calculates the points from a given clearance.\n     *\n     * Upon a clearance, a puyo game usually displays a product of two numbers.\n     * The first number is the transformation point. Usually, points are given\n     * for colored objects. Transforming nuisance may be awarded points if\n     * this.nuisanceTransformPoint is not 0.\n     *\n     * The second number is the sum of bonus points, in the range [1, 999].\n     * Bonus points are given depending on the chain, color count and the size\n     * of each connection group.\n     *\n     * @param {Number} chain - \n     *                 the chain count of this clearance. Adds chain bonus.\n     * @param {Number} connectionMap - \n     *                 the connections of this clearance. Adds color bonus and\n     *                 group bonus.\n     * @param {Number} transformDiffs - \n     *                 all transformations triggered by this clearance. Adds\n     *                 colored object transform points and nuisance points.\n     * @return {[Number, Number]}\n     *         two numbers, the product of which is the points given for this\n     *         clearance.\n     */\n    points({ chain, connectionMap, transformDiffs }) {\n      const colorCount = Array.from(connectionMap.values())\n                           .reduce((count, connections) => count + Math.min(1, connections.length), 0);\n      const groupSizes = Array.from(connectionMap.values())\n                           .reduce((sizes, connections) => sizes.concat(connections.map(connection => connection.length)), []);\n\n      return [\n               this.level * transformDiffs.reduce((sum, diff) => sum + this.transformPoint(diff), 0), \n               \n               clamp(this.colorBonus(colorCount) + \n                     this.chainBonus(chain) +\n                     groupSizes.reduce((sum, groupSize) => sum + this.groupBonus(groupSize), 0),\n                     1, 999)\n             ];\n    }\n  }\n\n  constructor({ rule, dimension = DEFAULT_DIMENSION } = {}) {\n    super({ rule: new Tsu.Rule(rule), dimension: dimension });\n\n    let self = this;\n\n    // the following functions extends this.field to have convenience functions\n    // specific to this game.\n\n    /**\n     * Pass through to Field.Algorithm.gravitationalDiff.\n     */\n    this.field.gravitate = function() {\n      return Field.Algorithm.gravitationalDiff(this);\n    };\n\n    /**\n     * Pass through to Field.Algorithm.findConnections, with targets and min\n     * connection specified.\n     */\n    this.field.connections = function() {\n      return Field.Algorithm.findConnections(this, {\n        targetObjects: ['RED', 'BLUE', 'GREEN', 'YELLOW', 'PURPLE'].map(key => Field.Object[key]),\n        minConnection: self.rule.minClearConnection\n      });\n    };\n\n    /**\n     * Pass through to Field.Algorithm.clearingDiff.\n     *\n     * @param {decltype(Field.Algorithm.findConnections)} connections = this.field.connections()\n     *        The connection map storing Positionals to clear. May be specified\n     *        if the connection map was previously calculated.\n     */\n    this.field.clear = function(connections = this.connections()) {\n      return Field.Algorithm.clearingDiff(Field.Algorithm.flattenConnectionMap(connections));\n    };\n\n    {\n      let clone = this.field.clone;\n      // decorate the default clone function, to add the above conveniences\n      // functions to the cloned field as well.\n      this.field.clone = function() {\n        let cloned = clone.apply(this);\n        cloned.gravitate = this.gravitate;\n        cloned.connections = this.connections;\n        cloned.clear = this.clear;\n\n        return cloned;\n      };\n    }\n  } \n}\n\nGame.Modes[Tsu.GAME_ID] = Tsu;\n","<template>\n  <div id=\"simulator\">\n    <PuyoEditor :base64=\"base64\"/>\n    <pre>\noriginal field:\n{{ field }}\n\nbase64 field:\n{{ base64 }}\n\ndecoded field:\n{{ decoded }}\n\ndecoded field margin time setting is null:\n{{ noMarginTime }}\n\nfinal field:\n{{ final }}\n\npoints:\n{{ points }}\n\nwith margin time = null, nuisance multiplier after 500 sec:\n{{ multiplier }}\n    </pre>\n  </div>\n</template>\n\n<script>\n  import PuyoEditor from './PuyoSimulatorEditor.vue';\n  import Tsu from './simulator/Game/Tsu.js';\n  import Game from './simulator/Game/Game.js';\n  import Field from './simulator/Field/Field.js';\n  import BitStreamReader from './simulator/Tools/BitStreamReader.js';\n\n  export default {\n    components: {\n      PuyoEditor,\n    },\n    data() {\n      let game = new Tsu;\n      game.rule.marginTime = null;\n      let field = game.field;\n\n      let keys = ['RED', 'YELLOW', 'BLUE', 'GREEN', 'PURPLE',\n                  'EMPTY'];\n      let gtr = [0, 3, 3, 1, 1, 3, 5, 5, 5, 5, 5, 5, 5,\n                 0, 3, 0, 1, 0, 1, 5, 5, 5, 5, 5, 5, 5,\n                 2, 0, 2, 0, 0, 3, 0, 5, 5, 5, 5, 5, 5,\n                 3, 2, 1, 2, 3, 1, 3, 5, 5, 5, 5, 5, 5,\n                 3, 2, 3, 1, 2, 1, 3, 5, 5, 5, 5, 5, 5,\n                 1, 3, 1, 2, 2, 1, 5, 1, 5, 5, 5, 5, 5];\n      // GTR on the field\n      let iter = 0;\n      for (let pos of field) {\n        pos.object = Field.Object[keys[gtr[iter]]];\n        iter++;\n      }\n\n      let base64 = Game.Serializer.toBitStream(game).finalize();\n      let decoded = Game.Deserializer.fromBitStream(new BitStreamReader(base64));\n      let initial = field.clone();\n\n      let points = 0;\n\n      for (let chain = 1; diff === undefined || diff.length > 0; ++chain) {\n        \n        field.gravitate().apply();\n\n        let connections = field.connections();\n        var diff = field.clear(connections);\n\n        let [base, bonus] = game.rule.points({\n            chain: chain,\n            connectionMap: connections,\n            transformDiffs: diff\n        });\n\n        points += base * bonus;\n\n        diff.apply();\n      }\n\n      return {\n        field: Field.Serializer.toAsciiArt(initial),\n        base64: base64,\n        decoded: Field.Serializer.toAsciiArt(decoded.field),\n        final: Field.Serializer.toAsciiArt(field),\n        points: points,\n        multiplier: game.rule.nuisanceRateMultiplier({ time: 500 }),\n        noMarginTime: decoded.rule.marginTime === null\n      };\n    }\n  };\n</script>\n\n<style>\nul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulator.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulator.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PuyoSimulator.vue?vue&type=template&id=5bc6b486&\"\nimport script from \"./PuyoSimulator.vue?vue&type=script&lang=js&\"\nexport * from \"./PuyoSimulator.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PuyoSimulator.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport PuyoSimulator from './PuyoSimulator.vue';\n\nVue.config.productionTip = false;\n\nnew Vue({\n  render: h => h(PuyoSimulator)\n}).$mount('#simulator');\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulator.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./PuyoSimulator.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}